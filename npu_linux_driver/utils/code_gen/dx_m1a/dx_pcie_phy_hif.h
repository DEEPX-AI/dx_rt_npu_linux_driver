/* Automatically generated files */
/* registers are not duplicated and register unit : 32bits */

#ifndef __PCIE_PHY_HIF_H
#define __PCIE_PHY_HIF_H
/* Address */
#define PCIE0_PHY_HIF_BASE     0xc1040000
#define PCIE1_PHY_HIF_BASE     0xc1240000

/* Register Definition */
typedef volatile union _acc_mpll_ctl0_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy0_mplla_force_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        phy0 MPLLA force enable. When asserted, the corresponding MPLL is forced to be powered up, irrespective of the txX_mpll_en input. This input is used for applications where a free-running MPLL clock output is required. There are no restrictions on when the mplla_force_en signal can be transitioned. If MPLL is not powered up, Synopsys recommends that you follow the txX_mpll_en controls as shown in Figure MPLLA Configuration Settings Update Followed By a TX Power-state Change.
        */
        volatile unsigned int phy0_mplla_ssc_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        phy0 Override value for mplla_ssc_en
        */
        volatile unsigned int phy0_mpllb_force_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        phy0 MPLLB force enable When asserted, the corresponding MPLL is forced to be powered up, irrespective of the txX_mpll_en input. This input is used for applications where a free-running MPLL clock output is required. There are no restrictions on when the mplla_force_en signal can be transitioned. If MPLL is not powered up, Synopsys recommends that you follow the txX_mpll_en controls as shown in Figure MPLLA Configuration Settings Update Followed By a TX Power-state Change.
        */
        volatile unsigned int phy0_mpllb_ssc_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        phy0 Override value for mpllb_ssc_en
        */
        volatile unsigned int phy1_mplla_force_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 4 */
        /* Description :
        phy1 MPLLA force enable. When asserted, the corresponding MPLL is forced to be powered up, irrespective of the txX_mpll_en input. This input is used for applications where a free-running MPLL clock output is required. There are no restrictions on when the mplla_force_en signal can be transitioned. If MPLL is not powered up, Synopsys recommends that you follow the txX_mpll_en controls as shown in Figure MPLLA Configuration Settings Update Followed By a TX Power-state Change.
        */
        volatile unsigned int phy1_mplla_ssc_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 5 */
        /* Description :
        phy1 Override value for mplla_ssc_en
        */
        volatile unsigned int phy1_mpllb_force_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 6 */
        /* Description :
        phy1 MPLLB force enable When asserted, the corresponding MPLL is forced to be powered up, irrespective of the txX_mpll_en input. This input is used for applications where a free-running MPLL clock output is required. There are no restrictions on when the mplla_force_en signal can be transitioned. If MPLL is not powered up, Synopsys recommends that you follow the txX_mpll_en controls as shown in Figure MPLLA Configuration Settings Update Followed By a TX Power-state Change.
        */
        volatile unsigned int phy1_mpllb_ssc_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 7 */
        /* Description :
        phy1 Override value for mpllb_ssc_en
        */
        volatile unsigned int phy0_mplla_div_sync_clk_en:1;
        /* Default Value : 0x0, TYPE : RO, Position : 8 */
        /* Description :
        [['', ' Controller following "PCLK as PHY output" method should ignore the signal, and leave it unconnected. '], ['', ' Controller following "PCLK as PHY input" method can use this signal to phase align the PCLK on controller side with the PCLK inside the SNPS PCS. '], [" It is implied that Controller's source for PCLK generation will be the mpll[a,b]", '_[word,dword,div]_clk generated by the PLL. '], ['', ' For more details on the usage , see "Integration with Controllers following PCLK as PHY input method" section.']]
        */
        volatile unsigned int phy0_mplla_force_ack:1;
        /* Default Value : 0x0, TYPE : RO, Position : 9 */
        /* Description :
        phy0 MPLLA Force Acknowledge output for mpll(a,b)_force_en. This output asserts when the MPLL is powered up in response to mpll(a,b)_force_en assertion. This output de-asserts as a response to mpll(a,b)_force_en de-assertion, and at that point the MPLL is powered down if txX_mpll_en of other lanes is de-asserted. Note: A four-way level handshake must be followed between mpll(a,b)_force_en and mpll(a,b)_force_ack.
        */
        volatile unsigned int phy0_mplla_state:1;
        /* Default Value : 0x0, TYPE : RO, Position : 10 */
        /* Description :
        Connects to the mplla_state signal on PHY0. For the full signal description, refer to the DesignWare Cores PHY databook, "Signal Descriptions" chapter.
        */
        volatile unsigned int phy0_mplla_word_sync_clk_en:1;
        /* Default Value : 0x0, TYPE : RO, Position : 11 */
        /* Description :
        [['', ' Controller following "PCLK as PHY output" method should ignore the signal, and leave it unconnected. '], ['', ' Controller following "PCLK as PHY input" method can use this signal to phase align the PCLK on controller side with the PCLK inside the SNPS PCS. '], [" It is implied that Controller's source for PCLK generation will be the mpll[a,b]", '_[word,dword,div]_clk generated by the PLL. '], ['', ' For more details on the usage , see "Integration with Controllers following PCLK as PHY input method" section.']]
        */
        volatile unsigned int phy0_mpllb_dword_sync_clk_en:1;
        /* Default Value : 0x0, TYPE : RO, Position : 12 */
        /* Description :
        [['', ' Controller following "PCLK as PHY output" method should ignore the signal, and leave it unconnected. '], ['', ' Controller following "PCLK as PHY input" method can use this signal to phase align the PCLK on controller side with the PCLK inside the SNPS PCS. '], [" It is implied that Controller's source for PCLK generation will be the mpll[a,b]", '_[word,dword,div]_clk generated by the PLL. '], ['', ' For more details on the usage , see "Integration with Controllers following PCLK as PHY input method" section.']]
        */
        volatile unsigned int phy0_mpllb_force_ack:1;
        /* Default Value : 0x0, TYPE : RO, Position : 13 */
        /* Description :
        phy0 MPLLB Force Acknowledge. Acknowledge output for mpll(a,b)_force_en. This output asserts when the MPLL is powered up in response to mpll(a,b)_force_en assertion. This output de-asserts as a response to mpll(a,b)_force_en de-assertion, and at that point the MPLL is powered down if txX_mpll_en of other lanes is de-asserted.
        */
        volatile unsigned int phy0_mpllb_state:1;
        /* Default Value : 0x0, TYPE : RO, Position : 14 */
        /* Description :
        Connects to the mpllb_state signal on PHY0. For the full signal description, refer to the DesignWare Cores PHY databook, "Signal Descriptions" chapter.
        */
        volatile unsigned int phy0_mpllb_word_sync_clk_en:1;
        /* Default Value : 0x0, TYPE : RO, Position : 15 */
        /* Description :
        [['', ' Controller following "PCLK as PHY output" method should ignore the signal, and leave it unconnected. '], ['', ' Controller following "PCLK as PHY input" method can use this signal to phase align the PCLK on controller side with the PCLK inside the SNPS PCS. '], [" It is implied that Controller's source for PCLK generation will be the mpll[a,b]", '_[word,dword,div]_clk generated by the PLL. '], ['', ' For more details on the usage , see "Integration with Controllers following PCLK as PHY input method" section.']]
        */
        volatile unsigned int phy1_mplla_div_sync_clk_en:1;
        /* Default Value : 0x0, TYPE : RO, Position : 16 */
        /* Description :
        [['', ' Controller following "PCLK as PHY output" method should ignore the signal, and leave it unconnected. '], ['', ' Controller following "PCLK as PHY input" method can use this signal to phase align the PCLK on controller side with the PCLK inside the SNPS PCS. '], [" It is implied that Controller's source for PCLK generation will be the mpll[a,b]", '_[word,dword,div]_clk generated by the PLL. '], ['', ' For more details on the usage , see "Integration with Controllers following PCLK as PHY input method" section.']]
        */
        volatile unsigned int phy1_mplla_force_ack:1;
        /* Default Value : 0x0, TYPE : RO, Position : 17 */
        /* Description :
        phy1 MPLLA Force Acknowledge output for mpll(a,b)_force_en. This output asserts when the MPLL is powered up in response to mpll(a,b)_force_en assertion. This output de-asserts as a response to mpll(a,b)_force_en de-assertion, and at that point the MPLL is powered down if txX_mpll_en of other lanes is de-asserted. Note: A four-way level handshake must be followed between mpll(a,b)_force_en and mpll(a,b)_force_ack.
        */
        volatile unsigned int phy1_mplla_state:1;
        /* Default Value : 0x0, TYPE : RO, Position : 18 */
        /* Description :
        Connects to the mplla_state signal on PHY1. For the full signal description, refer to the DesignWare Cores PHY databook, "Signal Descriptions" chapter.
        */
        volatile unsigned int phy1_mplla_word_sync_clk_en:1;
        /* Default Value : 0x0, TYPE : RO, Position : 19 */
        /* Description :
        [['', ' Controller following "PCLK as PHY output" method should ignore the signal, and leave it unconnected. '], ['', ' Controller following "PCLK as PHY input" method can use this signal to phase align the PCLK on controller side with the PCLK inside the SNPS PCS. '], [" It is implied that Controller's source for PCLK generation will be the mpll[a,b]", '_[word,dword,div]_clk generated by the PLL. '], ['', ' For more details on the usage , see "Integration with Controllers following PCLK as PHY input method" section.']]
        */
        volatile unsigned int phy1_mpllb_dword_sync_clk_en:1;
        /* Default Value : 0x0, TYPE : RO, Position : 20 */
        /* Description :
        [['', ' Controller following "PCLK as PHY output" method should ignore the signal, and leave it unconnected. '], ['', ' Controller following "PCLK as PHY input" method can use this signal to phase align the PCLK on controller side with the PCLK inside the SNPS PCS. '], [" It is implied that Controller's source for PCLK generation will be the mpll[a,b]", '_[word,dword,div]_clk generated by the PLL. '], ['', ' For more details on the usage , see "Integration with Controllers following PCLK as PHY input method" section.']]
        */
        volatile unsigned int phy1_mpllb_force_ack:1;
        /* Default Value : 0x0, TYPE : RO, Position : 21 */
        /* Description :
        phy1 MPLLB Force Acknowledge. Acknowledge output for mpll(a,b)_force_en. This output asserts when the MPLL is powered up in response to mpll(a,b)_force_en assertion. This output de-asserts as a response to mpll(a,b)_force_en de-assertion, and at that point the MPLL is powered down if txX_mpll_en of other lanes is de-asserted.
        */
        volatile unsigned int phy1_mpllb_state:1;
        /* Default Value : 0x0, TYPE : RO, Position : 22 */
        /* Description :
        Connects to the mpllb_state signal on PHY1. For the full signal description, refer to the DesignWare Cores PHY databook, "Signal Descriptions" chapter.
        */
        volatile unsigned int phy1_mpllb_word_sync_clk_en:1;
        /* Default Value : 0x0, TYPE : RO, Position : 23 */
        /* Description :
        [['', ' Controller following "PCLK as PHY output" method should ignore the signal, and leave it unconnected. '], ['', ' Controller following "PCLK as PHY input" method can use this signal to phase align the PCLK on controller side with the PCLK inside the SNPS PCS. '], [" It is implied that Controller's source for PCLK generation will be the mpll[a,b]", '_[word,dword,div]_clk generated by the PLL. '], ['', ' For more details on the usage , see "Integration with Controllers following PCLK as PHY input method" section.']]
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_mpll_ctl0_t;

typedef volatile union _acc_ctrl0_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy0_cr_para_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        PHY0 cr_para interface enable signal
        */
        volatile unsigned int phy1_cr_para_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        PHY1 cr_para interface enable signal
        */
        volatile unsigned int phy0_cr_para_sel:1;
        /* Default Value : 0x1, TYPE : RW, Position : 2 */
        /* Description :
        PHY0_Control Register (CR) parallel interface select. Controls selection between JTAG and CR interfaces: 0: JTAG 1: Control Register (CR)
        */
        volatile unsigned int phy1_cr_para_sel:1;
        /* Default Value : 0x1, TYPE : RW, Position : 3 */
        /* Description :
        PHY1_Control Register (CR) parallel interface select. Controls selection between JTAG and CR interfaces: 0: JTAG 1: Control Register (CR)
        */
        volatile unsigned int phy0_sram_bypass:1;
        /* Default Value : 0x1, TYPE : RW, Position : 4 */
        /* Description :
        PHY0_SRAM bypass. Control signal when asserted, bypasses the SRAM interface.
        */
        volatile unsigned int phy1_sram_bypass:1;
        /* Default Value : 0x1, TYPE : RW, Position : 5 */
        /* Description :
        PHY1_SRAM bypass. Control signal when asserted, bypasses the SRAM interface.
        */
        volatile unsigned int phy0_sram_ext_ld_done:1;
        /* Default Value : 0x0, TYPE : RW, Position : 6 */
        /* Description :
        PHY0_SRAM external load done. Signal asserted by user after any updates to the SRAM have been loaded.
        */
        volatile unsigned int phy1_sram_ext_ld_done:1;
        /* Default Value : 0x0, TYPE : RW, Position : 7 */
        /* Description :
        PHY1_SRAM external load done. Signal asserted by user after any updates to the SRAM have been loaded.
        */
        volatile unsigned int phy0_sram_init_done:1;
        /* Default Value : 0x0, TYPE : RO, Position : 8 */
        /* Description :
        PHY0_SRAM Initialization done. Signal indicating that the SRAM has been initialized by the boot loader in the Raw PCS. This signal will not assert if sram_bypass is asserted.
        */
        volatile unsigned int phy1_sram_init_done:1;
        /* Default Value : 0x0, TYPE : RO, Position : 9 */
        /* Description :
        PHY1_SRAM Initialization done. Signal indicating that the SRAM has been initialized by the boot loader in the Raw PCS. This signal will not assert if sram_bypass is asserted.
        */
        volatile unsigned int phy0_sw_tmode:1;
        /* Default Value : 0x0, TYPE : RW, Position : 10 */
        /* Description :
        PHY0 test mode during normal operation using software
        */
        volatile unsigned int phy1_sw_tmode:1;
        /* Default Value : 0x0, TYPE : RW, Position : 11 */
        /* Description :
        PHY1 test mode during normal operation using software
        */
        volatile unsigned int phy0_sw_test_phy_sel:2;
        /* Default Value : 0x0, TYPE : RW, Position : 12 */
        /* Description :
        PHY0 selection for test or monitoring during normal operation using software with phy0_sw_tmode
        */
        volatile unsigned int phy1_sw_test_phy_sel:2;
        /* Default Value : 0x0, TYPE : RW, Position : 14 */
        /* Description :
        PHY1 selection for test or monitoring during normal operation using software with phy1_sw_tmode
        */
        volatile unsigned int RESERVED_16:16;
        /* Default Value : x, TYPE : U, Position : 16 */
        /* Description :
        RESERVED
        */
    };
} acc_ctrl0_t;

typedef volatile union _acc_pwr_gating0_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int pg_mode_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        Power gating support enable. Control input to enable the power gating support.
        */
        volatile unsigned int upcs_pwr_stable:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        Power stable to PCS. Status signal indicating that power for the PCS is stable
        */
        volatile unsigned int upcs_pwr_en:1;
        /* Default Value : 0x1, TYPE : RO, Position : 2 */
        /* Description :
        Power enable for PCS power switch(es).Enable signal for external switch(es) to supply power to the power-gated logic in the PCS
        */
        volatile unsigned int phy0_pcs_pwr_stable:1;
        /* Default Value : 0x1, TYPE : RW, Position : 3 */
        /* Description :
        PHY0 Power stable for Raw PCS. Status signal indicating that the power for the Raw PCS is stable.
        */
        volatile unsigned int phy1_pcs_pwr_stable:1;
        /* Default Value : 0x1, TYPE : RW, Position : 4 */
        /* Description :
        PHY1 Power stable for Raw PCS. Status signal indicating that the power for the Raw PCS is stable.
        */
        volatile unsigned int phy0_pcs_pwr_en:1;
        /* Default Value : 0x1, TYPE : RO, Position : 5 */
        /* Description :
        PHY0 Power enable for Raw PCS power switches. Enable signal for external switches to supply power to the power gated logic in Raw PCS.
        */
        volatile unsigned int phy1_pcs_pwr_en:1;
        /* Default Value : 0x1, TYPE : RO, Position : 6 */
        /* Description :
        PHY1 Power enable for Raw PCS power switches. Enable signal for external switches to supply power to the power gated logic in Raw PCS.
        */
        volatile unsigned int RESERVED_7:25;
        /* Default Value : x, TYPE : U, Position : 7 */
        /* Description :
        RESERVED
        */
    };
} acc_pwr_gating0_t;

typedef volatile union _acc_refclk_ctl0_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy0_ref_use_pad:1;
        /* Default Value : 0x1, TYPE : RW, Position : 0 */
        /* Description :
        PHY0 Select reference clock connected to ref_pad_clk_p/ref_pad_clk_m. Selects the external ref_pad_clk_p and ref_pad_clk_m inputs as the reference clock source when asserted.
        */
        volatile unsigned int phy1_ref_use_pad:1;
        /* Default Value : 0x1, TYPE : RW, Position : 1 */
        /* Description :
        PHY1 Select reference clock connected to ref_pad_clk_p/ref_pad_clk_m. Selects the external ref_pad_clk_p and ref_pad_clk_m inputs as the reference clock source when asserted.
        */
        volatile unsigned int phy0_ref_alt_clk_lp_sel:1;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        PHY0 Selects the external ref_alt_clk_lp input as the reference clock source when asserted. When de-asserted, ref_alt_clk is the source of the reference clock.
        */
        volatile unsigned int phy1_ref_alt_clk_lp_sel:1;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        PHY1 Selects the external ref_alt_clk_lp input as the reference clock source when asserted. When de-asserted, ref_alt_clk is the source of the reference clock.
        */
        volatile unsigned int phy0_ref_repeat_clk_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 4 */
        /* Description :
        PHY0 Repeat reference clock enable. Enables the CMOS output clocks ref_repeat_clk_(p,m).
        */
        volatile unsigned int phy1_ref_repeat_clk_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 5 */
        /* Description :
        PHY1 Repeat reference clock enable. Enables the CMOS output clocks ref_repeat_clk_(p,m).
        */
        volatile unsigned int RESERVED_6:26;
        /* Default Value : x, TYPE : U, Position : 6 */
        /* Description :
        RESERVED
        */
    };
} acc_refclk_ctl0_t;

typedef volatile union _acc_pcs_cfg0_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int ext_pclk_req:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        External PCLK request.
        */
        volatile unsigned int pipe_rx_cdr_legacy_en:1;
        /* Default Value : 0x1, TYPE : RW, Position : 1 */
        /* Description :
        This control signal selects between legacy mode CDR logic and the new implementation. Default value is 1
        */
        volatile unsigned int pipe_rx_recal_cont_en:1;
        /* Default Value : 0x1, TYPE : RW, Position : 2 */
        /* Description :
        This pin enables re-locking when alignment is lost in non-8B10 mode. Default value is 1
        */
        volatile unsigned int RESERVED_3:5;
        /* Default Value : x, TYPE : U, Position : 3 */
        /* Description :
        RESERVED
        */
        volatile unsigned int pipe_rx0_idle_los_cnt:6;
        /* Default Value : 0x0, TYPE : RW, Position : 8 */
        /* Description :
        These pins provide a control to disable the CDR in PCIE GEN1 mode when there is electrical idle on rx line without EIOS. It is recommended that you control this signal in your SoC register with default value 000000 (disabled).
        */
        volatile unsigned int pipe_rx1_idle_los_cnt:6;
        /* Default Value : 0x0, TYPE : RW, Position : 14 */
        /* Description :
        These pins provide a control to disable the CDR in PCIE GEN1 mode when there is electrical idle on rx line without EIOS. It is recommended that you control this signal in your SoC register with default value 000000 (disabled).
        */
        volatile unsigned int pipe_rx2_idle_los_cnt:6;
        /* Default Value : 0x0, TYPE : RW, Position : 20 */
        /* Description :
        These pins provide a control to disable the CDR in PCIE GEN1 mode when there is electrical idle on rx line without EIOS. It is recommended that you control this signal in your SoC register with default value 000000 (disabled).
        */
        volatile unsigned int pipe_rx3_idle_los_cnt:6;
        /* Default Value : 0x0, TYPE : RW, Position : 26 */
        /* Description :
        These pins provide a control to disable the CDR in PCIE GEN1 mode when there is electrical idle on rx line without EIOS. It is recommended that you control this signal in your SoC register with default value 000000 (disabled).
        */
    };
} acc_pcs_cfg0_t;

typedef volatile union _acc_phy_intf0_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy_lane0_power_present:1;
        /* Default Value : 0x1, TYPE : RW, Position : 0 */
        /* Description :
        VBUS power present. Signal from external VBUS detection circuit.
        */
        volatile unsigned int phy_lane1_power_present:1;
        /* Default Value : 0x1, TYPE : RW, Position : 1 */
        /* Description :
        VBUS power present. Signal from external VBUS detection circuit.
        */
        volatile unsigned int phy_lane2_power_present:1;
        /* Default Value : 0x1, TYPE : RW, Position : 2 */
        /* Description :
        VBUS power present. Signal from external VBUS detection circuit.
        */
        volatile unsigned int phy_lane3_power_present:1;
        /* Default Value : 0x1, TYPE : RW, Position : 3 */
        /* Description :
        VBUS power present. Signal from external VBUS detection circuit.
        */
        volatile unsigned int phy_lane0_rx2tx_par_lb_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 4 */
        /* Description :
        LANE0 Parallel (RX to TX) loopback enable. When this signal is asserted, recovered parallel data from the receiver is looped back to the transmit serializer.
        */
        volatile unsigned int phy_lane1_rx2tx_par_lb_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 5 */
        /* Description :
        LANE1 Parallel (RX to TX) loopback enable. When this signal is asserted, recovered parallel data from the receiver is looped back to the transmit serializer.
        */
        volatile unsigned int phy_lane2_rx2tx_par_lb_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 6 */
        /* Description :
        LANE2 Parallel (RX to TX) loopback enable. When this signal is asserted, recovered parallel data from the receiver is looped back to the transmit serializer.
        */
        volatile unsigned int phy_lane3_rx2tx_par_lb_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 7 */
        /* Description :
        LANE3 Parallel (RX to TX) loopback enable. When this signal is asserted, recovered parallel data from the receiver is looped back to the transmit serializer.
        */
        volatile unsigned int phy_tx0_bypass_eq_calc:1;
        /* Default Value : 0x0, TYPE : RW, Position : 8 */
        /* Description :
        TX0 Bypass equalization calculated values. When active the number of legs for PRE/MAIN and POST will be used directly from the inputs: tx0_eq_pre tx0_eq_post tx0_eq_main
        */
        volatile unsigned int phy_tx1_bypass_eq_calc:1;
        /* Default Value : 0x0, TYPE : RW, Position : 9 */
        /* Description :
        TX1 Bypass equalization calculated values. When active the number of legs for PRE/MAIN and POST will be used directly from the inputs: tx0_eq_pre tx0_eq_post tx0_eq_main
        */
        volatile unsigned int phy_tx2_bypass_eq_calc:1;
        /* Default Value : 0x0, TYPE : RW, Position : 10 */
        /* Description :
        TX2 Bypass equalization calculated values. When active the number of legs for PRE/MAIN and POST will be used directly from the inputs: tx0_eq_pre tx0_eq_post tx0_eq_main
        */
        volatile unsigned int phy_tx3_bypass_eq_calc:1;
        /* Default Value : 0x0, TYPE : RW, Position : 11 */
        /* Description :
        TX3 Bypass equalization calculated values. When active the number of legs for PRE/MAIN and POST will be used directly from the inputs: tx0_eq_pre tx0_eq_post tx0_eq_main
        */
        volatile unsigned int phy_tx0_vregdrv_byp:1;
        /* Default Value : 0x0, TYPE : RW, Position : 12 */
        /* Description :
        TX0 Bypasses the tx regulator and uses vptx directly.
        */
        volatile unsigned int phy_tx1_vregdrv_byp:1;
        /* Default Value : 0x0, TYPE : RW, Position : 13 */
        /* Description :
        TX1 Bypasses the tx regulator and uses vptx directly.
        */
        volatile unsigned int phy_tx2_vregdrv_byp:1;
        /* Default Value : 0x0, TYPE : RW, Position : 14 */
        /* Description :
        TX2 Bypasses the tx regulator and uses vptx directly.
        */
        volatile unsigned int phy_tx3_vregdrv_byp:1;
        /* Default Value : 0x0, TYPE : RW, Position : 15 */
        /* Description :
        TX3 Bypasses the tx regulator and uses vptx directly.
        */
        volatile unsigned int pipe_lane0_clkreq_n:1;
        /* Default Value : 0x0, TYPE : RW, Position : 16 */
        /* Description :
        Clock request for lane 0. Reserved; Tie to b'0.
        */
        volatile unsigned int pipe_lane1_clkreq_n:1;
        /* Default Value : 0x0, TYPE : RW, Position : 17 */
        /* Description :
        Clock request for lane 1. Reserved; Tie to b'0.
        */
        volatile unsigned int pipe_lane2_clkreq_n:1;
        /* Default Value : 0x0, TYPE : RW, Position : 18 */
        /* Description :
        Clock request for lane 2. Reserved; Tie to b'0.
        */
        volatile unsigned int pipe_lane3_clkreq_n:1;
        /* Default Value : 0x0, TYPE : RW, Position : 19 */
        /* Description :
        Clock request for lane 3. Reserved; Tie to b'0.
        */
        volatile unsigned int RESERVED_20:12;
        /* Default Value : x, TYPE : U, Position : 20 */
        /* Description :
        RESERVED
        */
    };
} acc_phy_intf0_t;

typedef volatile union _acc_phy_intf1_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int pipe_lane0_link_num:4;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        Reserved for future.
        */
        volatile unsigned int pipe_lane1_link_num:4;
        /* Default Value : 0x0, TYPE : RW, Position : 4 */
        /* Description :
        Reserved for future.
        */
        volatile unsigned int pipe_lane2_link_num:4;
        /* Default Value : 0x0, TYPE : RW, Position : 8 */
        /* Description :
        Reserved for future.
        */
        volatile unsigned int pipe_lane3_link_num:4;
        /* Default Value : 0x0, TYPE : RW, Position : 12 */
        /* Description :
        Reserved for future.
        */
        volatile unsigned int pipe_lane0_phy_src_sel:2;
        /* Default Value : 0x0, TYPE : RW, Position : 16 */
        /* Description :
        PHY source select for lane 0.
        */
        volatile unsigned int pipe_lane1_phy_src_sel:2;
        /* Default Value : 0x0, TYPE : RW, Position : 18 */
        /* Description :
        PHY source select for lane 1.
        */
        volatile unsigned int pipe_lane2_phy_src_sel:2;
        /* Default Value : 0x0, TYPE : RW, Position : 20 */
        /* Description :
        PHY source select for lane 2.
        */
        volatile unsigned int pipe_lane3_phy_src_sel:2;
        /* Default Value : 0x0, TYPE : RW, Position : 22 */
        /* Description :
        PHY source select for lane 3.
        */
        volatile unsigned int pipe_lane0_protocol:2;
        /* Default Value : 0x0, TYPE : RW, Position : 24 */
        /* Description :
        Protocol/mode for lane 0, Selects the PHY operating mode. 
For PCIe 3.1 operation, set to 2'b00. For USB 3.1 operation, set to 2'b01.
For SATA operation, set to 2'b10. Reserved: 2'b11
        */
        volatile unsigned int pipe_lane1_protocol:2;
        /* Default Value : 0x0, TYPE : RW, Position : 26 */
        /* Description :
        Protocol/mode for lane 1, Selects the PHY operating mode. 
For PCIe 3.1 operation, set to 2'b00. For USB 3.1 operation, set to 2'b01.
For SATA operation, set to 2'b10. Reserved: 2'b11
        */
        volatile unsigned int pipe_lane2_protocol:2;
        /* Default Value : 0x0, TYPE : RW, Position : 28 */
        /* Description :
        Protocol/mode for lane 2, Selects the PHY operating mode. 
For PCIe 3.1 operation, set to 2'b00. For USB 3.1 operation, set to 2'b01.
For SATA operation, set to 2'b10. Reserved: 2'b11
        */
        volatile unsigned int pipe_lane3_protocol:2;
        /* Default Value : 0x0, TYPE : RW, Position : 30 */
        /* Description :
        Protocol/mode for lane 3, Selects the PHY operating mode. 
For PCIe 3.1 operation, set to 2'b00. For USB 3.1 operation, set to 2'b01.
For SATA operation, set to 2'b10. Reserved: 2'b11
        */
    };
} acc_phy_intf1_t;

typedef volatile union _acc_phy_intf2_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int pipe_lane0_tx2rx_loopbk:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        TX-to-RX loopback enable for lane 0. When asserted, this input turns on the TX-to-RX serial loopback within the PHY.
        */
        volatile unsigned int pipe_lane1_tx2rx_loopbk:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        TX-to-RX loopback enable for lane 1. When asserted, this input turns on the TX-to-RX serial loopback within the PHY.
        */
        volatile unsigned int pipe_lane2_tx2rx_loopbk:1;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        TX-to-RX loopback enable for lane 2. When asserted, this input turns on the TX-to-RX serial loopback within the PHY.
        */
        volatile unsigned int pipe_lane3_tx2rx_loopbk:1;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        TX-to-RX loopback enable for lane 3. When asserted, this input turns on the TX-to-RX serial loopback within the PHY.
        */
        volatile unsigned int pipe_lane0_clkack_n:1;
        /* Default Value : 0x0, TYPE : RO, Position : 4 */
        /* Description :
        Clock acknowledge for lane 0
        */
        volatile unsigned int pipe_lane1_clkack_n:1;
        /* Default Value : 0x0, TYPE : RO, Position : 5 */
        /* Description :
        Clock acknowledge for lane 1
        */
        volatile unsigned int pipe_lane2_clkack_n:1;
        /* Default Value : 0x0, TYPE : RO, Position : 6 */
        /* Description :
        Clock acknowledge for lane 2
        */
        volatile unsigned int pipe_lane3_clkack_n:1;
        /* Default Value : 0x0, TYPE : RO, Position : 7 */
        /* Description :
        Clock acknowledge for lane 3
        */
        volatile unsigned int pipe_lane0_databuswidth:2;
        /* Default Value : 0x2, TYPE : RO, Position : 8 */
        /* Description :
        Bus width configuration for lane 0
        */
        volatile unsigned int pipe_lane1_databuswidth:2;
        /* Default Value : 0x2, TYPE : RO, Position : 10 */
        /* Description :
        Bus width configuration for lane 1
        */
        volatile unsigned int pipe_lane2_databuswidth:2;
        /* Default Value : 0x2, TYPE : RO, Position : 12 */
        /* Description :
        Bus width configuration for lane 2
        */
        volatile unsigned int pipe_lane3_databuswidth:2;
        /* Default Value : 0x2, TYPE : RO, Position : 14 */
        /* Description :
        Bus width configuration for lane 3
        */
        volatile unsigned int pipe_lane0_power_present:1;
        /* Default Value : 0x0, TYPE : RO, Position : 16 */
        /* Description :
        Power present for lane 0. This output is the same as the phy_laneX_power_present input, which must be driven by external VBUS detection logic.
        */
        volatile unsigned int pipe_lane1_power_present:1;
        /* Default Value : 0x0, TYPE : RO, Position : 17 */
        /* Description :
        Power present for lane 1. This output is the same as the phy_laneX_power_present input, which must be driven by external VBUS detection logic.
        */
        volatile unsigned int pipe_lane2_power_present:1;
        /* Default Value : 0x0, TYPE : RO, Position : 18 */
        /* Description :
        Power present for lane 2. This output is the same as the phy_laneX_power_present input, which must be driven by external VBUS detection logic.
        */
        volatile unsigned int pipe_lane3_power_present:1;
        /* Default Value : 0x0, TYPE : RO, Position : 19 */
        /* Description :
        Power present for lane 3. This output is the same as the phy_laneX_power_present input, which must be driven by external VBUS detection logic.
        */
        volatile unsigned int RESERVED_20:12;
        /* Default Value : x, TYPE : U, Position : 20 */
        /* Description :
        RESERVED
        */
    };
} acc_phy_intf2_t;

typedef volatile union _acc_pipe_rxtx0_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int pipe_rx0_cmn_refclk_mode:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        RX common reference clock mode for lane 0.
        */
        volatile unsigned int pipe_rx1_cmn_refclk_mode:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        RX common reference clock mode for lane 1.
        */
        volatile unsigned int pipe_rx2_cmn_refclk_mode:1;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        RX common reference clock mode for lane 2.
        */
        volatile unsigned int pipe_rx3_cmn_refclk_mode:1;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        RX common reference clock mode for lane 3.
        */
        volatile unsigned int pipe_rx0_eq_training:1;
        /* Default Value : 0x0, TYPE : RW, Position : 4 */
        /* Description :
        RX equalization training mode enable for lane 0
        */
        volatile unsigned int pipe_rx1_eq_training:1;
        /* Default Value : 0x0, TYPE : RW, Position : 5 */
        /* Description :
        RX equalization training mode enable for lane 1
        */
        volatile unsigned int pipe_rx2_eq_training:1;
        /* Default Value : 0x0, TYPE : RW, Position : 6 */
        /* Description :
        RX equalization training mode enable for lane 2
        */
        volatile unsigned int pipe_rx3_eq_training:1;
        /* Default Value : 0x0, TYPE : RW, Position : 7 */
        /* Description :
        RX equalization training mode enable for lane 3
        */
        volatile unsigned int pipe_rx0_sris_mode_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 8 */
        /* Description :
        RX SRIS ECM mode enable for lane 0. When asserted, this input configures the PHY CDR and the elastic buffer to recover Independent Spread Spectrum Data.
        */
        volatile unsigned int pipe_rx1_sris_mode_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 9 */
        /* Description :
        RX SRIS ECM mode enable for lane 1. When asserted, this input configures the PHY CDR and the elastic buffer to recover Independent Spread Spectrum Data.
        */
        volatile unsigned int pipe_rx2_sris_mode_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 10 */
        /* Description :
        RX SRIS ECM mode enable for lane 2. When asserted, this input configures the PHY CDR and the elastic buffer to recover Independent Spread Spectrum Data.
        */
        volatile unsigned int pipe_rx3_sris_mode_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 11 */
        /* Description :
        RX SRIS ECM mode enable for lane 3. When asserted, this input configures the PHY CDR and the elastic buffer to recover Independent Spread Spectrum Data.
        */
        volatile unsigned int pipe_rx0_termination:1;
        /* Default Value : 0x1, TYPE : RW, Position : 12 */
        /* Description :
        RX termination enable for lane 0. When asserted, the RX terminations are enabled.
        */
        volatile unsigned int pipe_rx1_termination:1;
        /* Default Value : 0x1, TYPE : RW, Position : 13 */
        /* Description :
        RX termination enable for lane 1. When asserted, the RX terminations are enabled.
        */
        volatile unsigned int pipe_rx2_termination:1;
        /* Default Value : 0x1, TYPE : RW, Position : 14 */
        /* Description :
        RX termination enable for lane 2. When asserted, the RX terminations are enabled.
        */
        volatile unsigned int pipe_rx3_termination:1;
        /* Default Value : 0x1, TYPE : RW, Position : 15 */
        /* Description :
        RX termination enable for lane 3. When asserted, the RX terminations are enabled.
        */
        volatile unsigned int pipe_rx0_align_detect:1;
        /* Default Value : 0x0, TYPE : RO, Position : 16 */
        /* Description :
        RX ALIGN symbol detected for lane 0
        */
        volatile unsigned int pipe_rx1_align_detect:1;
        /* Default Value : 0x0, TYPE : RO, Position : 17 */
        /* Description :
        RX ALIGN symbol detected for lane 1
        */
        volatile unsigned int pipe_rx2_align_detect:1;
        /* Default Value : 0x0, TYPE : RO, Position : 18 */
        /* Description :
        RX ALIGN symbol detected for lane 2
        */
        volatile unsigned int pipe_rx3_align_detect:1;
        /* Default Value : 0x0, TYPE : RO, Position : 19 */
        /* Description :
        RX ALIGN symbol detected for lane 3
        */
        volatile unsigned int pipe_rx0_ebuff_location:9;
        /* Default Value : 0x0, TYPE : RO, Position : 20 */
        /* Description :
        Entries in elastic buffer for lane 0
        */
        volatile unsigned int RESERVED_29:3;
        /* Default Value : x, TYPE : U, Position : 29 */
        /* Description :
        RESERVED
        */
    };
} acc_pipe_rxtx0_t;

typedef volatile union _acc_pipe_rxtx1_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int pipe_rx1_ebuff_location:9;
        /* Default Value : 0x0, TYPE : RO, Position : 0 */
        /* Description :
        Entries in elastic buffer for lane 1
        */
        volatile unsigned int pipe_rx2_ebuff_location:9;
        /* Default Value : 0x0, TYPE : RO, Position : 9 */
        /* Description :
        Entries in elastic buffer for lane 2
        */
        volatile unsigned int pipe_rx3_ebuff_location:9;
        /* Default Value : 0x0, TYPE : RO, Position : 18 */
        /* Description :
        Entries in elastic buffer for lane 3
        */
        volatile unsigned int RESERVED_27:5;
        /* Default Value : x, TYPE : U, Position : 27 */
        /* Description :
        RESERVED
        */
    };
} acc_pipe_rxtx1_t;

typedef volatile union _acc_pipe_rxtx2_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int pipe_tx0_ones_zeros:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        USB TX compliance pattern enable for lane0
        */
        volatile unsigned int pipe_tx1_ones_zeros:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        USB TX compliance pattern enable for lane1
        */
        volatile unsigned int pipe_tx2_ones_zeros:1;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        USB TX compliance pattern enable for lane2
        */
        volatile unsigned int pipe_tx3_ones_zeros:1;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        USB TX compliance pattern enable for lane3
        */
        volatile unsigned int pipe_tx0_pattern:2;
        /* Default Value : 0x0, TYPE : RW, Position : 4 */
        /* Description :
        PIPE signal TX0 Pattern[1:0] Reserved
        */
        volatile unsigned int pipe_tx1_pattern:2;
        /* Default Value : 0x0, TYPE : RW, Position : 6 */
        /* Description :
        PIPE signal TX1 Pattern[1:0] Reserved
        */
        volatile unsigned int pipe_tx2_pattern:2;
        /* Default Value : 0x0, TYPE : RW, Position : 8 */
        /* Description :
        PIPE signal TX2 Pattern[1:0] Reserved
        */
        volatile unsigned int pipe_tx3_pattern:2;
        /* Default Value : 0x0, TYPE : RW, Position : 10 */
        /* Description :
        PIPE signal TX3 Pattern[1:0] Reserved
        */
        volatile unsigned int phy0_sup_pre_hp:1;
        /* Default Value : 0x0, TYPE : RW, Position : 12 */
        /* Description :
        PHY0 Enable for high performance prescaler.
        */
        volatile unsigned int phy1_sup_pre_hp:1;
        /* Default Value : 0x0, TYPE : RW, Position : 13 */
        /* Description :
        PHY1 Enable for high performance prescaler.
        */
        volatile unsigned int phy_res_ack_in:1;
        /* Default Value : 0x0, TYPE : RW, Position : 14 */
        /* Description :
        Arbitration lines (res_ack_in) for sharing single reference resistor.
        */
        volatile unsigned int phy_res_req_in:1;
        /* Default Value : 0x0, TYPE : RW, Position : 15 */
        /* Description :
        Arbitration lines (res_req_in) for sharing single reference resistor.
        */
        volatile unsigned int phy_rtune_req:1;
        /* Default Value : 0x0, TYPE : RW, Position : 16 */
        /* Description :
        Resistor tune request. Assertion triggers a resistor tune request 
(if one is not already in progress).
        */
        volatile unsigned int phy_res_ack_out:1;
        /* Default Value : 0x0, TYPE : RO, Position : 17 */
        /* Description :
        Arbitration lines (res_ack_out) for sharing single reference resistor.
        */
        volatile unsigned int phy_res_req_out:1;
        /* Default Value : 0x0, TYPE : RO, Position : 18 */
        /* Description :
        Arbitration lines (res_req_out) for sharing single reference resistor.
        */
        volatile unsigned int phy_rtune_ack:1;
        /* Default Value : 0x0, TYPE : RO, Position : 19 */
        /* Description :
        Resistor tune acknowledge. Indicates that a resistor tune has completed
        */
        volatile unsigned int RESERVED_20:12;
        /* Default Value : x, TYPE : U, Position : 20 */
        /* Description :
        RESERVED
        */
    };
} acc_pipe_rxtx2_t;

typedef volatile union _acc_protocol00_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy_ext_ctrl_sel:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        phy_ext_ctrl_sel is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_bs_rx_bigswing:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        protocol0_ext_bs_rx_bigswing is TX/RX boundary scan swing/level settings. Sets the boundary scan swing and level settings for the PHY.
        */
        volatile unsigned int protocol0_ext_bs_rx_level:3;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        protocol0_ext_bs_rx_level is TX/RX boundary scan swing/level settings. Sets the boundary scan swing and level settings for the PHY.
        */
        volatile unsigned int protocol0_ext_bs_tx_lowswing:1;
        /* Default Value : 0x0, TYPE : RW, Position : 5 */
        /* Description :
        protocol0_ext_bs_tx_lowswing is TX/RX boundary scan swing/level settings. Sets the boundary scan swing and level settings for the PHY.
        */
        volatile unsigned int protocol0_ext_dco_finetune:6;
        /* Default Value : 0x0, TYPE : RW, Position : 6 */
        /* Description :
        protocol0_ext_dco_finetune is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_dco_range:2;
        /* Default Value : 0x0, TYPE : RW, Position : 12 */
        /* Description :
        protocol0_ext_dco_range is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_14:18;
        /* Default Value : x, TYPE : U, Position : 14 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol00_t;

typedef volatile union _acc_protocol01_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mplla_cp_int:7;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mplla_cp_int is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_cp_int_gs:7;
        /* Default Value : 0x0, TYPE : RW, Position : 7 */
        /* Description :
        protocol0_ext_mplla_cp_int_gs is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_cp_prop:7;
        /* Default Value : 0x0, TYPE : RW, Position : 14 */
        /* Description :
        protocol0_ext_mplla_cp_prop is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_cp_prop_gs:7;
        /* Default Value : 0x0, TYPE : RW, Position : 21 */
        /* Description :
        protocol0_ext_mplla_cp_prop_gs is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_div5_clk_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 28 */
        /* Description :
        protocol0_ext_mplla_div5_clk_en is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_div_clk_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 29 */
        /* Description :
        protocol0_ext_mplla_div_clk_en is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_fracn_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 30 */
        /* Description :
        protocol0_ext_mplla_fracn_en is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_31:1;
        /* Default Value : x, TYPE : U, Position : 31 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol01_t;

typedef volatile union _acc_protocol02_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mplla_div_multiplier:8;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mplla_div_multiplier is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_fracn_den:16;
        /* Default Value : 0x0, TYPE : RW, Position : 8 */
        /* Description :
        protocol0_ext_mplla_fracn_den is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol02_t;

typedef volatile union _acc_protocol03_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mplla_fracn_quot:16;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mplla_fracn_quot is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_fracn_rem:16;
        /* Default Value : 0x0, TYPE : RW, Position : 16 */
        /* Description :
        protocol0_ext_mplla_fracn_rem is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
    };
} acc_protocol03_t;

typedef volatile union _acc_protocol04_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mplla_freq_vco:2;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mplla_freq_vco is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_multiplier:12;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        protocol0_ext_mplla_multiplier is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_14:18;
        /* Default Value : x, TYPE : U, Position : 14 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol04_t;

typedef volatile union _acc_protocol05_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mplla_ssc_peak:20;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mplla_ssc_peak is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_20:12;
        /* Default Value : x, TYPE : U, Position : 20 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol05_t;

typedef volatile union _acc_protocol06_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mplla_ssc_stepsize:21;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mplla_ssc_stepsize is PHY configuration setting per-protocol.
External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_ssc_up_spread:1;
        /* Default Value : 0x0, TYPE : RW, Position : 21 */
        /* Description :
        protocol0_ext_mplla_ssc_up_spread is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_tx_clk_div:3;
        /* Default Value : 0x0, TYPE : RW, Position : 22 */
        /* Description :
        protocol0_ext_mplla_tx_clk_div is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_v2i:2;
        /* Default Value : 0x0, TYPE : RW, Position : 25 */
        /* Description :
        protocol0_ext_mplla_v2i is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mplla_word_div2_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 27 */
        /* Description :
        protocol0_ext_mplla_word_div2_en is PHY configuration setting per-protocol.  External overrides for the per-protocol settings of the PHY configuration inputs
        */
        volatile unsigned int RESERVED_28:4;
        /* Default Value : x, TYPE : U, Position : 28 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol06_t;

typedef volatile union _acc_protocol07_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mpllb_cp_int:7;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mpllb_cp_int is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_cp_int_gs:7;
        /* Default Value : 0x0, TYPE : RW, Position : 7 */
        /* Description :
        protocol0_ext_mpllb_cp_int_gs is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_cp_prop:7;
        /* Default Value : 0x0, TYPE : RW, Position : 14 */
        /* Description :
        protocol0_ext_mpllb_cp_prop is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_cp_prop_gs:7;
        /* Default Value : 0x0, TYPE : RW, Position : 21 */
        /* Description :
        protocol0_ext_mpllb_cp_prop_gs is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_div5_clk_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 28 */
        /* Description :
        protocol0_ext_mpllb_div5_clk_en is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_div_clk_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 29 */
        /* Description :
        protocol0_ext_mpllb_div_clk_en is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_fracn_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 30 */
        /* Description :
        protocol0_ext_mpllb_fracn_en is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_31:1;
        /* Default Value : x, TYPE : U, Position : 31 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol07_t;

typedef volatile union _acc_protocol08_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mpllb_div_multiplier:8;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mpllb_div_multiplier is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_fracn_den:8;
        /* Default Value : 0x0, TYPE : RW, Position : 8 */
        /* Description :
        protocol0_ext_mpllb_fracn_den is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_16:16;
        /* Default Value : x, TYPE : U, Position : 16 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol08_t;

typedef volatile union _acc_protocol09_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mpllb_fracn_quot:16;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mpllb_fracn_quot is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_fracn_rem:16;
        /* Default Value : 0x0, TYPE : RW, Position : 16 */
        /* Description :
        protocol0_ext_mpllb_fracn_rem is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
    };
} acc_protocol09_t;

typedef volatile union _acc_protocol10_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mpllb_freq_vco:2;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mpllb_freq_vco is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_multiplier:12;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        protocol0_ext_mpllb_multiplier is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_14:18;
        /* Default Value : x, TYPE : U, Position : 14 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol10_t;

typedef volatile union _acc_protocol11_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mpllb_ssc_peak:20;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mpllb_ssc_peak is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_20:12;
        /* Default Value : x, TYPE : U, Position : 20 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol11_t;

typedef volatile union _acc_protocol12_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_mpllb_ssc_stepsize:21;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_mpllb_ssc_stepsize is PHY configuration setting per-protocol.
External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_ssc_up_spread:1;
        /* Default Value : 0x0, TYPE : RW, Position : 21 */
        /* Description :
        protocol0_ext_mpllb_ssc_up_spread is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_tx_clk_div:3;
        /* Default Value : 0x0, TYPE : RW, Position : 22 */
        /* Description :
        protocol0_ext_mpllb_tx_clk_div is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_v2i:2;
        /* Default Value : 0x0, TYPE : RW, Position : 25 */
        /* Description :
        protocol0_ext_mpllb_v2i is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_mpllb_word_div2_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 27 */
        /* Description :
        protocol0_ext_mpllb_word_div2_en is PHY configuration setting per-protocol.  External overrides for the per-protocol settings of the PHY configuration inputs
        */
        volatile unsigned int RESERVED_28:4;
        /* Default Value : x, TYPE : U, Position : 28 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol12_t;

typedef volatile union _acc_protocol13_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_ref_clk_mplla_div:3;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_ref_clk_mplla_div is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_ref_clk_mpllb_div:3;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        protocol0_ext_ref_clk_mpllb_div is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_ref_range:5;
        /* Default Value : 0x0, TYPE : RW, Position : 6 */
        /* Description :
        protocol0_ext_ref_range is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_rx_adapt_afe_en_g1:4;
        /* Default Value : 0x0, TYPE : RW, Position : 11 */
        /* Description :
        protocolP_ext_rx_adapt_afe_en_g1 are receiver equalization setting for overrides.  External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int protocol0_ext_rx_adapt_afe_en_g2:4;
        /* Default Value : 0x0, TYPE : RW, Position : 15 */
        /* Description :
        protocolP_ext_rx_adapt_afe_en_g2 are receiver equalization setting for overrides.  External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int protocol0_ext_rx_adapt_afe_en_g3:4;
        /* Default Value : 0x0, TYPE : RW, Position : 19 */
        /* Description :
        protocolP_ext_rx_adapt_afe_en_g3 are receiver equalization setting for overrides.  External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int RESERVED_23:9;
        /* Default Value : x, TYPE : U, Position : 23 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol13_t;

typedef volatile union _acc_protocol14_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_adapt_dfe_en_g1:4;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_adapt_dfe_en_g1 is receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int protocol0_ext_rx_adapt_dfe_en_g2:4;
        /* Default Value : 0x0, TYPE : RW, Position : 4 */
        /* Description :
        protocol0_ext_rx_adapt_dfe_en_g2 is receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int protocol0_ext_rx_adapt_dfe_en_g3:4;
        /* Default Value : 0x0, TYPE : RW, Position : 8 */
        /* Description :
        protocol0_ext_rx_adapt_dfe_en_g3 is receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int protocol0_ext_rx_cdr_vco_lowfreq_g1:4;
        /* Default Value : 0x0, TYPE : RW, Position : 12 */
        /* Description :
        protocol0_ext_rx_cdr_vco_lowfreq_g1 is a external overrides settings for receiver vco lower frequency band per protocol. PCS internally drives it to the hard coded default settings for each protocol and rate
        */
        volatile unsigned int protocol0_ext_rx_cdr_vco_lowfreq_g2:4;
        /* Default Value : 0x0, TYPE : RW, Position : 16 */
        /* Description :
        protocol0_ext_rx_cdr_vco_lowfreq_g2 is a external overrides settings for receiver vco lower frequency band per protocol. PCS internally drives it to the hard coded default settings for each protocol and rate
        */
        volatile unsigned int protocol0_ext_rx_cdr_vco_lowfreq_g3:4;
        /* Default Value : 0x0, TYPE : RW, Position : 20 */
        /* Description :
        protocol0_ext_rx_cdr_vco_lowfreq_g3 is a external overrides settings for receiver vco lower frequency band per protocol. PCS internally drives it to the hard coded default settings for each protocol and rate
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol14_t;

typedef volatile union _acc_protocol15_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_afe_gain_g1:16;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_afe_gain_g1 are receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int protocol0_ext_rx_eq_afe_gain_g2:16;
        /* Default Value : 0x0, TYPE : RW, Position : 16 */
        /* Description :
        protocol0_ext_rx_eq_afe_gain_g2 are receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
    };
} acc_protocol15_t;

typedef volatile union _acc_protocol16_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_afe_gain_g3:16;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_afe_gain_g3 are receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int protocol0_ext_rx_eq_att_lvl_g1:12;
        /* Default Value : 0x0, TYPE : RW, Position : 16 */
        /* Description :
        protocol0_ext_rx_eq_att_lvl_g1 is receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int RESERVED_28:4;
        /* Default Value : x, TYPE : U, Position : 28 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol16_t;

typedef volatile union _acc_protocol17_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_att_lvl_g2:12;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_att_lvl_g2 is receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int protocol0_ext_rx_eq_att_lvl_g3:12;
        /* Default Value : 0x0, TYPE : RW, Position : 12 */
        /* Description :
        protocol0_ext_rx_eq_att_lvl_g3 is receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol17_t;

typedef volatile union _acc_protocol18_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_ctle_boost_g1:20;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_ctle_boost_g1 are receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int RESERVED_20:12;
        /* Default Value : x, TYPE : U, Position : 20 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol18_t;

typedef volatile union _acc_protocol19_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_ctle_boost_g2:20;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_ctle_boost_g2 are receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int RESERVED_20:12;
        /* Default Value : x, TYPE : U, Position : 20 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol19_t;

typedef volatile union _acc_protocol20_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_ctle_boost_g3:20;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_ctle_boost_g3 are receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int RESERVED_20:12;
        /* Default Value : x, TYPE : U, Position : 20 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol20_t;

typedef volatile union _acc_protocol21_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_delta_iq_g1:16;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_delta_iq_g1 is receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int protocol0_ext_rx_eq_delta_iq_g2:16;
        /* Default Value : 0x0, TYPE : RW, Position : 16 */
        /* Description :
        protocol0_ext_rx_eq_delta_iq_g2 is receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
    };
} acc_protocol21_t;

typedef volatile union _acc_protocol22_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_delta_iq_g3:16;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_delta_iq_g3 is receiver equalization setting for overrides. External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
        volatile unsigned int RESERVED_16:16;
        /* Default Value : x, TYPE : U, Position : 16 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol22_t;

typedef volatile union _acc_protocol23_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_dfe_tap1_g1:32;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_dfe_tap1_g1 are receiver equalization setting for overrides.  External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
    };
} acc_protocol23_t;

typedef volatile union _acc_protocol24_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_dfe_tap1_g2:32;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_dfe_tap1_g2 are receiver equalization setting for overrides.  External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
    };
} acc_protocol24_t;

typedef volatile union _acc_protocol25_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_eq_dfe_tap1_g3:32;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_eq_dfe_tap1_g3 are receiver equalization setting for overrides.  External overrides for the per-protocol settings of the PHY's RX equalization inputs.
        */
    };
} acc_protocol25_t;

typedef volatile union _acc_protocol26_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_ref_ld_val_g1:7;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        rotocolP_ext_rx_ref_ld_val_g1 is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_rx_ref_ld_val_g2:7;
        /* Default Value : 0x0, TYPE : RW, Position : 7 */
        /* Description :
        rotocolP_ext_rx_ref_ld_val_g2 is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_rx_ref_ld_val_g3:7;
        /* Default Value : 0x0, TYPE : RW, Position : 14 */
        /* Description :
        rotocolP_ext_rx_ref_ld_val_g3 is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_21:11;
        /* Default Value : x, TYPE : U, Position : 21 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol26_t;

typedef volatile union _acc_protocol27_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_sigdet_hf_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_sigdet_hf_en is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_rx_sigdet_hf_en_g1:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        protocol0_ext_rx_sigdet_hf_en_g1 is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_rx_sigdet_hf_filt_dis:1;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        protocol0_ext_rx_sigdet_hf_filt_dis is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_rx_sigdet_hf_threshold_g1:12;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        protocol0_ext_rx_sigdet_hf_threshold_g1 is PHY configuration setting per-protocol. They are used to override threshold for signal detection in high speed path.
        */
        volatile unsigned int RESERVED_15:17;
        /* Default Value : x, TYPE : U, Position : 15 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol27_t;

typedef volatile union _acc_protocol28_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_sigdet_hf_threshold_g2:12;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_sigdet_hf_threshold_g2 is PHY configuration setting per-protocol. They are used to override threshold for signal detection in high speed path.
        */
        volatile unsigned int protocol0_ext_rx_sigdet_hf_threshold_g3:12;
        /* Default Value : 0x0, TYPE : RW, Position : 12 */
        /* Description :
        protocol0_ext_rx_sigdet_hf_threshold_g3 is PHY configuration setting per-protocol. They are used to override threshold for signal detection in high speed path.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol28_t;

typedef volatile union _acc_protocol29_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_sigdet_lf_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_sigdet_lf_en is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_rx_sigdet_lf_filter_en:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        protocol0_ext_rx_sigdet_lf_filter_en is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_rx_sigdet_lf_threshold_g1:12;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        protocol0_ext_rx_sigdet_lf_threshold_g1 is PHY configuration setting per-protocol. They are used to override threshold for signal detection in low speed path.
        */
        volatile unsigned int RESERVED_14:18;
        /* Default Value : x, TYPE : U, Position : 14 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol29_t;

typedef volatile union _acc_protocol30_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_sigdet_lf_threshold_g2:12;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_sigdet_lf_threshold_g2 is PHY configuration setting per-protocol. They are used to override threshold for signal detection in low speed path.
        */
        volatile unsigned int protocol0_ext_rx_sigdet_lf_threshold_g3:12;
        /* Default Value : 0x0, TYPE : RW, Position : 12 */
        /* Description :
        protocol0_ext_rx_sigdet_lf_threshold_g3 is PHY configuration setting per-protocol. They are used to override threshold for signal detection in low speed path.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol30_t;

typedef volatile union _acc_protocol31_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_term_ctrl:3;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_term_ctrl is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs
        */
        volatile unsigned int protocol0_ext_rx_vco_ld_val_g1:13;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        protocol0_ext_rx_vco_ld_val_g1 is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_16:16;
        /* Default Value : x, TYPE : U, Position : 16 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol31_t;

typedef volatile union _acc_protocol32_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_vco_ld_val_g2:13;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_vco_ld_val_g2 is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_rx_vco_ld_val_g3:13;
        /* Default Value : 0x0, TYPE : RW, Position : 13 */
        /* Description :
        protocol0_ext_rx_vco_ld_val_g3 is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_26:6;
        /* Default Value : x, TYPE : U, Position : 26 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol32_t;

typedef volatile union _acc_protocol33_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_rx_vref_ctrl:3;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_rx_vref_ctrl is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs
        */
        volatile unsigned int protocol0_ext_sup_rx_vco_vref_sel:3;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        protocol0_ext_sup_rx_vco_vref_sel is PHY configuration setting per_x0002_protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_6:26;
        /* Default Value : x, TYPE : U, Position : 6 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol33_t;

typedef volatile union _acc_protocol34_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_main_g1:24;
        /* Default Value : 0xa5294, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_main_g1 is a transmitter equalization setting for overrides. External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol34_t;

typedef volatile union _acc_protocol35_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_main_g2:24;
        /* Default Value : 0x94a52, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_main_g2 is a transmitter equalization setting for overrides. External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol35_t;

typedef volatile union _acc_protocol36_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_main_g3:24;
        /* Default Value : 0xc6318, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_main_g3 is a transmitter equalization setting for overrides. External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol36_t;

typedef volatile union _acc_protocol37_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_ovrd_g1:4;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_ovrd_g1 is a transmitter equalization setting for overrides. External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int protocol0_ext_tx_eq_ovrd_g2:4;
        /* Default Value : 0x0, TYPE : RW, Position : 4 */
        /* Description :
        protocol0_ext_tx_eq_ovrd_g2 is a transmitter equalization setting for overrides. External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int protocol0_ext_tx_eq_ovrd_g3:4;
        /* Default Value : 0x0, TYPE : RW, Position : 8 */
        /* Description :
        protocol0_ext_tx_eq_ovrd_g3 is a transmitter equalization setting for overrides. External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_12:20;
        /* Default Value : x, TYPE : U, Position : 12 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol37_t;

typedef volatile union _acc_protocol38_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_post_g1:24;
        /* Default Value : 0x4444, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_post_g1 is a transmitter equalization setting for overrides. External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol38_t;

typedef volatile union _acc_protocol39_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_post_g2:24;
        /* Default Value : 0x6666, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_post_g2 is a transmitter equalization setting for overrides. External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol39_t;

typedef volatile union _acc_protocol40_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_post_g3:24;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_post_g3 is a transmitter equalization setting for overrides. External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol40_t;

typedef volatile union _acc_protocol41_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_pre_g1:24;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_pre_g1 is a transmitter equalization setting for overrides.  External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol41_t;

typedef volatile union _acc_protocol42_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_pre_g2:24;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_pre_g2 is a transmitter equalization setting for overrides.  External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol42_t;

typedef volatile union _acc_protocol43_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_eq_pre_g3:24;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_eq_pre_g3 is a transmitter equalization setting for overrides.  External overrides for the per-protocol settings of the PHY's TX equalization inputs.
        */
        volatile unsigned int RESERVED_24:8;
        /* Default Value : x, TYPE : U, Position : 24 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol43_t;

typedef volatile union _acc_protocol44_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol0_ext_tx_term_ctrl:3;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol0_ext_tx_term_ctrl is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol0_ext_tx_vboost_lvl:3;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        Lane-based PHY configuration setting per protocol. Lane-based external overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_6:26;
        /* Default Value : x, TYPE : U, Position : 6 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol44_t;

typedef volatile union _acc_protocol45_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int protocol2_ext_bs_rx_bigswing_g1:1;
        /* Default Value : 0x0, TYPE : RW, Position : 0 */
        /* Description :
        protocol2_ext_bs_rx_bigswing_g1 sets RX boundary scan swing/level settings. Sets the boundary scan swing and level settings for the PHY.
        */
        volatile unsigned int protocol2_ext_bs_rx_bigswing_g2:1;
        /* Default Value : 0x0, TYPE : RW, Position : 1 */
        /* Description :
        protocol2_ext_bs_rx_bigswing_g2 sets RX boundary scan swing/level settings. Sets the boundary scan swing and level settings for the PHY.
        */
        volatile unsigned int protocol2_ext_bs_rx_bigswing_g3:1;
        /* Default Value : 0x0, TYPE : RW, Position : 2 */
        /* Description :
        protocol2_ext_bs_rx_bigswing_g3 sets RX boundary scan swing/level settings. Sets the boundary scan swing and level settings for the PHY.
        */
        volatile unsigned int protocol2_ext_bs_tx_lowswing_g1:1;
        /* Default Value : 0x0, TYPE : RW, Position : 3 */
        /* Description :
        protocol2_ext_bs_tx_lowswing_g1 sets TX boundary scan swing/level settings. Sets the boundary scan swing and level settings for the PHY.
        */
        volatile unsigned int protocol2_ext_bs_tx_lowswing_g2:1;
        /* Default Value : 0x0, TYPE : RW, Position : 4 */
        /* Description :
        protocol2_ext_bs_tx_lowswing_g2 sets TX boundary scan swing/level settings. Sets the boundary scan swing and level settings for the PHY.
        */
        volatile unsigned int protocol2_ext_bs_tx_lowswing_g3:1;
        /* Default Value : 0x0, TYPE : RW, Position : 5 */
        /* Description :
        protocol2_ext_bs_tx_lowswing_g3 sets TX boundary scan swing/level settings. Sets the boundary scan swing and level settings for the PHY.
        */
        volatile unsigned int protocol2_ext_rx_sigdet_lf_en_g1:1;
        /* Default Value : 0x0, TYPE : RW, Position : 6 */
        /* Description :
        protocol2_ext_rx_sigdet_lf_en_g1 is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int protocol2_ext_rx_sigdet_lf_filter_en_g1:1;
        /* Default Value : 0x0, TYPE : RW, Position : 7 */
        /* Description :
        protocol2_ext_rx_sigdet_lf_filter_en_g1 is PHY configuration setting per-protocol. External overrides for the per-protocol settings of the PHY configuration inputs.
        */
        volatile unsigned int RESERVED_8:24;
        /* Default Value : x, TYPE : U, Position : 8 */
        /* Description :
        RESERVED
        */
    };
} acc_protocol45_t;

typedef volatile union _acc_pipe_tmode0_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy0_cmn_out_generic_bus:5;
        /* Default Value : 0x0, TYPE : RO, Position : 0 */
        /* Description :
        Generic output bus for common block.
The following bus pins are being used for OCLA specific application
        */
        volatile unsigned int phy0_mon_out_valid:1;
        /* Default Value : 0x0, TYPE : RO, Position : 5 */
        /* Description :
        OCLA monitor valid signal.
        */
        volatile unsigned int phy0_ocla_clk:1;
        /* Default Value : 0x0, TYPE : RO, Position : 6 */
        /* Description :
        OCLA clock from PCS.Used to sample OCLA data on phy0_mon_out.
        */
        volatile unsigned int RESERVED_7:25;
        /* Default Value : x, TYPE : U, Position : 7 */
        /* Description :
        RESERVED
        */
    };
} acc_pipe_tmode0_t;

typedef volatile union _acc_pipe_tmode1_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy0_mon_out0:32;
        /* Default Value : 0x0, TYPE : RO, Position : 0 */
        /* Description :
        OCLA monitor bus output.
        */
    };
} acc_pipe_tmode1_t;

typedef volatile union _acc_pipe_tmode2_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy0_mon_out0:32;
        /* Default Value : 0x0, TYPE : RO, Position : 0 */
        /* Description :
        OCLA monitor bus output.
        */
    };
} acc_pipe_tmode2_t;

typedef volatile union _acc_pipe_tmode3_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy1_cmn_out_generic_bus:5;
        /* Default Value : 0x0, TYPE : RO, Position : 0 */
        /* Description :
        Generic output bus for common block.
The following bus pins are being used for OCLA specific application
        */
        volatile unsigned int phy1_mon_out_valid:1;
        /* Default Value : 0x0, TYPE : RO, Position : 5 */
        /* Description :
        OCLA monitor valid signal.
        */
        volatile unsigned int phy1_ocla_clk:1;
        /* Default Value : 0x0, TYPE : RO, Position : 6 */
        /* Description :
        OCLA clock from PCS.Used to sample OCLA data on phy1_mon_out.
        */
        volatile unsigned int RESERVED_7:25;
        /* Default Value : x, TYPE : U, Position : 7 */
        /* Description :
        RESERVED
        */
    };
} acc_pipe_tmode3_t;

typedef volatile union _acc_pipe_tmode4_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy1_mon_out0:32;
        /* Default Value : 0x0, TYPE : RO, Position : 0 */
        /* Description :
        OCLA monitor bus output.
        */
    };
} acc_pipe_tmode4_t;

typedef volatile union _acc_pipe_tmode5_t
{
    volatile unsigned int U;  /* Register-Access */
    struct {                  /* Register-Bitfields-Access */
        volatile unsigned int phy1_mon_out0:32;
        /* Default Value : 0x0, TYPE : RO, Position : 0 */
        /* Description :
        OCLA monitor bus output.
        */
    };
} acc_pipe_tmode5_t;


/* PCIe PHY_HIF Registers */
typedef volatile struct _pcie_phy_hif_reg_t
{
    volatile int reserved_0x0[7];
    acc_mpll_ctl0_t acc_mpll_ctl0; /* 0x1c */
    acc_ctrl0_t acc_ctrl0; /* 0x20 */
    acc_pwr_gating0_t acc_pwr_gating0; /* 0x24 */
    acc_refclk_ctl0_t acc_refclk_ctl0; /* 0x28 */
    acc_pcs_cfg0_t acc_pcs_cfg0; /* 0x2c */
    acc_phy_intf0_t acc_phy_intf0; /* 0x30 */
    acc_phy_intf1_t acc_phy_intf1; /* 0x34 */
    acc_phy_intf2_t acc_phy_intf2; /* 0x38 */
    acc_pipe_rxtx0_t acc_pipe_rxtx0; /* 0x3c */
    acc_pipe_rxtx1_t acc_pipe_rxtx1; /* 0x40 */
    acc_pipe_rxtx2_t acc_pipe_rxtx2; /* 0x44 */
    acc_protocol00_t acc_protocol00; /* 0x48 */
    acc_protocol01_t acc_protocol01; /* 0x4c */
    acc_protocol02_t acc_protocol02; /* 0x50 */
    acc_protocol03_t acc_protocol03; /* 0x54 */
    acc_protocol04_t acc_protocol04; /* 0x58 */
    acc_protocol05_t acc_protocol05; /* 0x5c */
    acc_protocol06_t acc_protocol06; /* 0x60 */
    acc_protocol07_t acc_protocol07; /* 0x64 */
    acc_protocol08_t acc_protocol08; /* 0x68 */
    acc_protocol09_t acc_protocol09; /* 0x6c */
    acc_protocol10_t acc_protocol10; /* 0x70 */
    acc_protocol11_t acc_protocol11; /* 0x74 */
    acc_protocol12_t acc_protocol12; /* 0x78 */
    acc_protocol13_t acc_protocol13; /* 0x7c */
    acc_protocol14_t acc_protocol14; /* 0x80 */
    acc_protocol15_t acc_protocol15; /* 0x84 */
    acc_protocol16_t acc_protocol16; /* 0x88 */
    acc_protocol17_t acc_protocol17; /* 0x8c */
    acc_protocol18_t acc_protocol18; /* 0x90 */
    acc_protocol19_t acc_protocol19; /* 0x94 */
    acc_protocol20_t acc_protocol20; /* 0x98 */
    acc_protocol21_t acc_protocol21; /* 0x9c */
    acc_protocol22_t acc_protocol22; /* 0xa0 */
    acc_protocol23_t acc_protocol23; /* 0xa4 */
    acc_protocol24_t acc_protocol24; /* 0xa8 */
    acc_protocol25_t acc_protocol25; /* 0xac */
    acc_protocol26_t acc_protocol26; /* 0xb0 */
    acc_protocol27_t acc_protocol27; /* 0xb4 */
    acc_protocol28_t acc_protocol28; /* 0xb8 */
    acc_protocol29_t acc_protocol29; /* 0xbc */
    acc_protocol30_t acc_protocol30; /* 0xc0 */
    acc_protocol31_t acc_protocol31; /* 0xc4 */
    acc_protocol32_t acc_protocol32; /* 0xc8 */
    acc_protocol33_t acc_protocol33; /* 0xcc */
    acc_protocol34_t acc_protocol34; /* 0xd0 */
    acc_protocol35_t acc_protocol35; /* 0xd4 */
    acc_protocol36_t acc_protocol36; /* 0xd8 */
    acc_protocol37_t acc_protocol37; /* 0xdc */
    acc_protocol38_t acc_protocol38; /* 0xe0 */
    acc_protocol39_t acc_protocol39; /* 0xe4 */
    acc_protocol40_t acc_protocol40; /* 0xe8 */
    acc_protocol41_t acc_protocol41; /* 0xec */
    acc_protocol42_t acc_protocol42; /* 0xf0 */
    acc_protocol43_t acc_protocol43; /* 0xf4 */
    acc_protocol44_t acc_protocol44; /* 0xf8 */
    acc_protocol45_t acc_protocol45; /* 0xfc */
    acc_pipe_tmode0_t acc_pipe_tmode0; /* 0x100 */
    acc_pipe_tmode1_t acc_pipe_tmode1; /* 0x104 */
    acc_pipe_tmode2_t acc_pipe_tmode2; /* 0x108 */
    acc_pipe_tmode3_t acc_pipe_tmode3; /* 0x10c */
    acc_pipe_tmode4_t acc_pipe_tmode4; /* 0x110 */
    acc_pipe_tmode5_t acc_pipe_tmode5; /* 0x114 */
} pcie_phy_hif_reg_t;

#endif /* __PCIE_PHY_HIF_H */