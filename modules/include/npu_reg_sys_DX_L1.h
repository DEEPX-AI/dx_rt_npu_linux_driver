// SPDX-License-Identifier: GPL-2.0
/*
 * Deepx Runtime Driver
 *
 * Copyright (C) 2023 Deepx, Inc.
 *
 */
#ifndef __NPU_REG_SYSTEM_DX_L1_H
#define __NPU_REG_SYSTEM_DX_L1_H

#include <linux/types.h>

/* Address */
#define REG_SYSTEM_OFFSET 0x0
#define REG_SYSTEM_ID    (REG_SYSTEM_OFFSET + 0x00000000) /* 0 */
#define REG_SYSTEM_STATUS    (REG_SYSTEM_OFFSET + 0x00000004) /* 4 */
#define REG_SYSTEM_MODE    (REG_SYSTEM_OFFSET + 0x00000008) /* 8 */
#define REG_SYSTEM_CMD    (REG_SYSTEM_OFFSET + 0x0000000c) /* 12 */
#define REG_SYSTEM_CMD_STATUS    (REG_SYSTEM_OFFSET + 0x00000010) /* 16 */
#define REG_SYSTEM_FEATURE_BASE    (REG_SYSTEM_OFFSET + 0x00000014) /* 20 */
#define REG_SYSTEM_WEIGHT_BASE    (REG_SYSTEM_OFFSET + 0x00000018) /* 24 */
#define REG_SYSTEM_SWREG0    (REG_SYSTEM_OFFSET + 0x0000001c) /* 28 */
#define REG_SYSTEM_SWREG1    (REG_SYSTEM_OFFSET + 0x00000020) /* 32 */
#define REG_SYSTEM_SWREG2    (REG_SYSTEM_OFFSET + 0x00000024) /* 36 */
#define REG_SYSTEM_SWREG3    (REG_SYSTEM_OFFSET + 0x00000028) /* 40 */

/* Register Definition */
typedef volatile union _SYSTEM_ID_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.ID*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SYSTEM_ID:16;  /* SYSTEM.ID.SYSTEM_ID [15:0] (R, 0x628)  */
        volatile uint32_t REVISION_ID:8;  /* SYSTEM.ID.REVISION_ID [23:16] (R, 0x0)  */
        volatile uint32_t DEVICE_ID:8;  /* SYSTEM.ID.DEVICE_ID [31:24] (R, 0xa1)  */
    };
} SYSTEM_ID_t;
typedef volatile union _SYSTEM_STATUS_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.STATUS*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t IRQ_STEP:1;  /* SYSTEM.STATUS.IRQ_STEP [0:0] (R, 0x0)  */
        volatile uint32_t IRQ_INF:1;  /* SYSTEM.STATUS.IRQ_INF [1:1] (R, 0x0)  */
        volatile uint32_t IRQ_INPUT_DONE:1;  /* SYSTEM.STATUS.IRQ_INPUT_DONE [2:2] (R, 0x0)  */
        volatile uint32_t BUSY:1;  /* SYSTEM.STATUS.BUSY [3:3] (R, 0x0)  */
        volatile uint32_t USER_DMA:1;  /* SYSTEM.STATUS.USER_DMA [4:4] (R, 0x1)  */
        volatile uint32_t RESERVED0:11;  /* SYSTEM.STATUS.RESERVED0 [15:5] (R, 0x0)  */
        volatile uint32_t ARGMAX_ID:16;  /* SYSTEM.STATUS.ARGMAX_ID [31:16] (R, 0x0)  */
    };
} SYSTEM_STATUS_t;
typedef volatile union _SYSTEM_MODE_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.MODE*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t LAST_CMD_NUM:16;  /* SYSTEM.MODE.LAST_CMD_NUM [15:0] (RW, 0x0)  */
        volatile uint32_t RESERVED0:12;  /* SYSTEM.MODE.RESERVED0 [27:16] (RW, 0x0)  */
        volatile uint32_t IRQ_INPUT_DONE_EN:1;  /* SYSTEM.MODE.IRQ_INPUT_DONE_EN [28:28] (RW, 0x0)  */
        volatile uint32_t AUTORUN_EN:1;  /* SYSTEM.MODE.AUTORUN_EN [29:29] (RW, 0x0)  */
        volatile uint32_t IRQ_STEP_EN:1;  /* SYSTEM.MODE.IRQ_STEP_EN [30:30] (RW, 0x0)  */
        volatile uint32_t IRQ_INF_EN:1;  /* SYSTEM.MODE.IRQ_INF_EN [31:31] (RW, 0x0)  */
    };
} SYSTEM_MODE_t;
typedef volatile union _SYSTEM_CMD_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.CMD*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t START:1;  /* SYSTEM.CMD.START [0:0] (W, 0x0)  */
        volatile uint32_t RESERVED0:31;  /* SYSTEM.CMD.RESERVED0 [31:1] (W, 0x0)  */
    };
} SYSTEM_CMD_t;
typedef volatile union _SYSTEM_CMD_STATUS_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.CMD_STATUS*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t CMD_STATUS:16;  /* SYSTEM.CMD_STATUS.CMD_STATUS [15:0] (R, 0x0)  */
        volatile uint32_t RESERVED0:16;  /* SYSTEM.CMD_STATUS.RESERVED0 [31:16] (R, 0x0)  */
    };
} SYSTEM_CMD_STATUS_t;
typedef volatile union _SYSTEM_FEATURE_BASE_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.FEATURE_BASE*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t FEATURE_OFFSET:32;  /* SYSTEM.FEATURE_BASE.FEATURE_OFFSET [31:0] (RW, 0x0)  */
    };
} SYSTEM_FEATURE_BASE_t;
typedef volatile union _SYSTEM_WEIGHT_BASE_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.WEIGHT_BASE*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t WEIGHT_OFFSET:32;  /* SYSTEM.WEIGHT_BASE.WEIGHT_OFFSET [31:0] (RW, 0x0)  */
    };
} SYSTEM_WEIGHT_BASE_t;
typedef volatile union _SYSTEM_SWREG0_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG0*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG0:32;  /* SYSTEM.SWREG0.SWREG0 [31:0] (RW, 0x0)  */
    };
} SYSTEM_SWREG0_t;
typedef volatile union _SYSTEM_SWREG1_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG1*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG1:32;  /* SYSTEM.SWREG1.SWREG1 [31:0] (RW, 0x0)  */
    };
} SYSTEM_SWREG1_t;
typedef volatile union _SYSTEM_SWREG2_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG2*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG2:32;  /* SYSTEM.SWREG2.SWREG2 [31:0] (RW, 0x0)  */
    };
} SYSTEM_SWREG2_t;
typedef volatile union _SYSTEM_SWREG3_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG3*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG3:32;  /* SYSTEM.SWREG3.SWREG3 [31:0] (RW, 0x0)  */
    };
} SYSTEM_SWREG3_t;

/* SYSTEM Module Definition */
typedef volatile struct _dxSYSTEM_t
{
    SYSTEM_ID_t ID;  /* SYSTEM 0x0 */
    SYSTEM_STATUS_t STATUS;  /* SYSTEM 0x4 */
    SYSTEM_MODE_t MODE;  /* SYSTEM 0x8 */
    SYSTEM_CMD_t CMD;  /* SYSTEM 0xc */
    SYSTEM_CMD_STATUS_t CMD_STATUS;  /* SYSTEM 0x10 */
    SYSTEM_FEATURE_BASE_t FEATURE_BASE;  /* SYSTEM 0x14 */
    SYSTEM_WEIGHT_BASE_t WEIGHT_BASE;  /* SYSTEM 0x18 */
    SYSTEM_SWREG0_t SWREG0;  /* SYSTEM 0x1c */
    SYSTEM_SWREG1_t SWREG1;  /* SYSTEM 0x20 */
    SYSTEM_SWREG2_t SWREG2;  /* SYSTEM 0x24 */
    SYSTEM_SWREG3_t SWREG3;  /* SYSTEM 0x28 */
} dxSYSTEM_t;

/* Register access API */
/* SYSTEM.ID (Category: SYSTEM) */
#define READ_SYSTEM_ID(base) npu_reg_read(base, REG_SYSTEM_ID)
#define WRITE_SYSTEM_ID(base, val) npu_reg_write(base, REG_SYSTEM_ID, val)
/* SYSTEM.ID.SYSTEM_ID (Category: SYSTEM) */
#define SYSTEM_ID_SYSTEM_ID_LEN        16
#define SYSTEM_ID_SYSTEM_ID_OFFSET     0
#define SYSTEM_ID_SYSTEM_ID_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_ID_SYSTEM_ID_MASK       0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define READ_SYSTEM_ID_SYSTEM_ID(base) \
    npu_reg_read_mask(base, REG_SYSTEM_ID, SYSTEM_ID_SYSTEM_ID_MASK, SYSTEM_ID_SYSTEM_ID_OFFSET)
#define WRITE_SYSTEM_ID_SYSTEM_ID(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_ID, val, SYSTEM_ID_SYSTEM_ID_MASK, SYSTEM_ID_SYSTEM_ID_OFFSET)

/* SYSTEM.ID.REVISION_ID (Category: SYSTEM) */
#define SYSTEM_ID_REVISION_ID_LEN        8
#define SYSTEM_ID_REVISION_ID_OFFSET     16
#define SYSTEM_ID_REVISION_ID_MASK_BITS  0x000000ff /* [7:0] 0b00000000000000000000000011111111 */
#define SYSTEM_ID_REVISION_ID_MASK       0x00ff0000 /* [23:16] 0b00000000111111110000000000000000 */
#define READ_SYSTEM_ID_REVISION_ID(base) \
    npu_reg_read_mask(base, REG_SYSTEM_ID, SYSTEM_ID_REVISION_ID_MASK, SYSTEM_ID_REVISION_ID_OFFSET)
#define WRITE_SYSTEM_ID_REVISION_ID(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_ID, val, SYSTEM_ID_REVISION_ID_MASK, SYSTEM_ID_REVISION_ID_OFFSET)

/* SYSTEM.ID.DEVICE_ID (Category: SYSTEM) */
#define SYSTEM_ID_DEVICE_ID_LEN        8
#define SYSTEM_ID_DEVICE_ID_OFFSET     24
#define SYSTEM_ID_DEVICE_ID_MASK_BITS  0x000000ff /* [7:0] 0b00000000000000000000000011111111 */
#define SYSTEM_ID_DEVICE_ID_MASK       0xff000000 /* [31:24] 0b11111111000000000000000000000000 */
#define READ_SYSTEM_ID_DEVICE_ID(base) \
    npu_reg_read_mask(base, REG_SYSTEM_ID, SYSTEM_ID_DEVICE_ID_MASK, SYSTEM_ID_DEVICE_ID_OFFSET)
#define WRITE_SYSTEM_ID_DEVICE_ID(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_ID, val, SYSTEM_ID_DEVICE_ID_MASK, SYSTEM_ID_DEVICE_ID_OFFSET)

/* SYSTEM.STATUS (Category: SYSTEM) */
#define READ_SYSTEM_STATUS(base) npu_reg_read(base, REG_SYSTEM_STATUS)
#define WRITE_SYSTEM_STATUS(base, val) npu_reg_write(base, REG_SYSTEM_STATUS, val)
/* SYSTEM.STATUS.IRQ_STEP (Category: SYSTEM) */
#define SYSTEM_STATUS_IRQ_STEP_LEN        1
#define SYSTEM_STATUS_IRQ_STEP_OFFSET     0
#define SYSTEM_STATUS_IRQ_STEP_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_STATUS_IRQ_STEP_MASK       0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define READ_SYSTEM_STATUS_IRQ_STEP(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS, SYSTEM_STATUS_IRQ_STEP_MASK, SYSTEM_STATUS_IRQ_STEP_OFFSET)
#define WRITE_SYSTEM_STATUS_IRQ_STEP(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS, val, SYSTEM_STATUS_IRQ_STEP_MASK, SYSTEM_STATUS_IRQ_STEP_OFFSET)

/* SYSTEM.STATUS.IRQ_INF (Category: SYSTEM) */
#define SYSTEM_STATUS_IRQ_INF_LEN        1
#define SYSTEM_STATUS_IRQ_INF_OFFSET     1
#define SYSTEM_STATUS_IRQ_INF_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_STATUS_IRQ_INF_MASK       0x00000002 /* [1:1] 0b00000000000000000000000000000010 */
#define READ_SYSTEM_STATUS_IRQ_INF(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS, SYSTEM_STATUS_IRQ_INF_MASK, SYSTEM_STATUS_IRQ_INF_OFFSET)
#define WRITE_SYSTEM_STATUS_IRQ_INF(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS, val, SYSTEM_STATUS_IRQ_INF_MASK, SYSTEM_STATUS_IRQ_INF_OFFSET)

/* SYSTEM.STATUS.IRQ_INPUT_DONE (Category: SYSTEM) */
#define SYSTEM_STATUS_IRQ_INPUT_DONE_LEN        1
#define SYSTEM_STATUS_IRQ_INPUT_DONE_OFFSET     2
#define SYSTEM_STATUS_IRQ_INPUT_DONE_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_STATUS_IRQ_INPUT_DONE_MASK       0x00000004 /* [2:2] 0b00000000000000000000000000000100 */
#define READ_SYSTEM_STATUS_IRQ_INPUT_DONE(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS, SYSTEM_STATUS_IRQ_INPUT_DONE_MASK, SYSTEM_STATUS_IRQ_INPUT_DONE_OFFSET)
#define WRITE_SYSTEM_STATUS_IRQ_INPUT_DONE(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS, val, SYSTEM_STATUS_IRQ_INPUT_DONE_MASK, SYSTEM_STATUS_IRQ_INPUT_DONE_OFFSET)

/* SYSTEM.STATUS.BUSY (Category: SYSTEM) */
#define SYSTEM_STATUS_BUSY_LEN        1
#define SYSTEM_STATUS_BUSY_OFFSET     3
#define SYSTEM_STATUS_BUSY_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_STATUS_BUSY_MASK       0x00000008 /* [3:3] 0b00000000000000000000000000001000 */
#define READ_SYSTEM_STATUS_BUSY(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS, SYSTEM_STATUS_BUSY_MASK, SYSTEM_STATUS_BUSY_OFFSET)
#define WRITE_SYSTEM_STATUS_BUSY(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS, val, SYSTEM_STATUS_BUSY_MASK, SYSTEM_STATUS_BUSY_OFFSET)

/* SYSTEM.STATUS.USER_DMA (Category: SYSTEM) */
#define SYSTEM_STATUS_USER_DMA_LEN        1
#define SYSTEM_STATUS_USER_DMA_OFFSET     4
#define SYSTEM_STATUS_USER_DMA_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_STATUS_USER_DMA_MASK       0x00000010 /* [4:4] 0b00000000000000000000000000010000 */
#define READ_SYSTEM_STATUS_USER_DMA(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS, SYSTEM_STATUS_USER_DMA_MASK, SYSTEM_STATUS_USER_DMA_OFFSET)
#define WRITE_SYSTEM_STATUS_USER_DMA(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS, val, SYSTEM_STATUS_USER_DMA_MASK, SYSTEM_STATUS_USER_DMA_OFFSET)

/* SYSTEM.STATUS.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_STATUS_RESERVED0_LEN        11
#define SYSTEM_STATUS_RESERVED0_OFFSET     5
#define SYSTEM_STATUS_RESERVED0_MASK_BITS  0x000007ff /* [10:0] 0b00000000000000000000011111111111 */
#define SYSTEM_STATUS_RESERVED0_MASK       0x0000ffe0 /* [15:5] 0b00000000000000001111111111100000 */
#define READ_SYSTEM_STATUS_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS, SYSTEM_STATUS_RESERVED0_MASK, SYSTEM_STATUS_RESERVED0_OFFSET)
#define WRITE_SYSTEM_STATUS_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS, val, SYSTEM_STATUS_RESERVED0_MASK, SYSTEM_STATUS_RESERVED0_OFFSET)

/* SYSTEM.STATUS.ARGMAX_ID (Category: SYSTEM) */
#define SYSTEM_STATUS_ARGMAX_ID_LEN        16
#define SYSTEM_STATUS_ARGMAX_ID_OFFSET     16
#define SYSTEM_STATUS_ARGMAX_ID_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_STATUS_ARGMAX_ID_MASK       0xffff0000 /* [31:16] 0b11111111111111110000000000000000 */
#define READ_SYSTEM_STATUS_ARGMAX_ID(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS, SYSTEM_STATUS_ARGMAX_ID_MASK, SYSTEM_STATUS_ARGMAX_ID_OFFSET)
#define WRITE_SYSTEM_STATUS_ARGMAX_ID(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS, val, SYSTEM_STATUS_ARGMAX_ID_MASK, SYSTEM_STATUS_ARGMAX_ID_OFFSET)

/* SYSTEM.MODE (Category: SYSTEM) */
#define READ_SYSTEM_MODE(base) npu_reg_read(base, REG_SYSTEM_MODE)
#define WRITE_SYSTEM_MODE(base, val) npu_reg_write(base, REG_SYSTEM_MODE, val)
/* SYSTEM.MODE.LAST_CMD_NUM (Category: SYSTEM) */
#define SYSTEM_MODE_LAST_CMD_NUM_LEN        16
#define SYSTEM_MODE_LAST_CMD_NUM_OFFSET     0
#define SYSTEM_MODE_LAST_CMD_NUM_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_MODE_LAST_CMD_NUM_MASK       0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define READ_SYSTEM_MODE_LAST_CMD_NUM(base) \
    npu_reg_read_mask(base, REG_SYSTEM_MODE, SYSTEM_MODE_LAST_CMD_NUM_MASK, SYSTEM_MODE_LAST_CMD_NUM_OFFSET)
#define WRITE_SYSTEM_MODE_LAST_CMD_NUM(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_MODE, val, SYSTEM_MODE_LAST_CMD_NUM_MASK, SYSTEM_MODE_LAST_CMD_NUM_OFFSET)

/* SYSTEM.MODE.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_MODE_RESERVED0_LEN        12
#define SYSTEM_MODE_RESERVED0_OFFSET     16
#define SYSTEM_MODE_RESERVED0_MASK_BITS  0x00000fff /* [11:0] 0b00000000000000000000111111111111 */
#define SYSTEM_MODE_RESERVED0_MASK       0x0fff0000 /* [27:16] 0b00001111111111110000000000000000 */
#define READ_SYSTEM_MODE_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_MODE, SYSTEM_MODE_RESERVED0_MASK, SYSTEM_MODE_RESERVED0_OFFSET)
#define WRITE_SYSTEM_MODE_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_MODE, val, SYSTEM_MODE_RESERVED0_MASK, SYSTEM_MODE_RESERVED0_OFFSET)

/* SYSTEM.MODE.IRQ_INPUT_DONE_EN (Category: SYSTEM) */
#define SYSTEM_MODE_IRQ_INPUT_DONE_EN_LEN        1
#define SYSTEM_MODE_IRQ_INPUT_DONE_EN_OFFSET     28
#define SYSTEM_MODE_IRQ_INPUT_DONE_EN_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_MODE_IRQ_INPUT_DONE_EN_MASK       0x10000000 /* [28:28] 0b00010000000000000000000000000000 */
#define READ_SYSTEM_MODE_IRQ_INPUT_DONE_EN(base) \
    npu_reg_read_mask(base, REG_SYSTEM_MODE, SYSTEM_MODE_IRQ_INPUT_DONE_EN_MASK, SYSTEM_MODE_IRQ_INPUT_DONE_EN_OFFSET)
#define WRITE_SYSTEM_MODE_IRQ_INPUT_DONE_EN(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_MODE, val, SYSTEM_MODE_IRQ_INPUT_DONE_EN_MASK, SYSTEM_MODE_IRQ_INPUT_DONE_EN_OFFSET)

/* SYSTEM.MODE.AUTORUN_EN (Category: SYSTEM) */
#define SYSTEM_MODE_AUTORUN_EN_LEN        1
#define SYSTEM_MODE_AUTORUN_EN_OFFSET     29
#define SYSTEM_MODE_AUTORUN_EN_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_MODE_AUTORUN_EN_MASK       0x20000000 /* [29:29] 0b00100000000000000000000000000000 */
#define READ_SYSTEM_MODE_AUTORUN_EN(base) \
    npu_reg_read_mask(base, REG_SYSTEM_MODE, SYSTEM_MODE_AUTORUN_EN_MASK, SYSTEM_MODE_AUTORUN_EN_OFFSET)
#define WRITE_SYSTEM_MODE_AUTORUN_EN(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_MODE, val, SYSTEM_MODE_AUTORUN_EN_MASK, SYSTEM_MODE_AUTORUN_EN_OFFSET)

/* SYSTEM.MODE.IRQ_STEP_EN (Category: SYSTEM) */
#define SYSTEM_MODE_IRQ_STEP_EN_LEN        1
#define SYSTEM_MODE_IRQ_STEP_EN_OFFSET     30
#define SYSTEM_MODE_IRQ_STEP_EN_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_MODE_IRQ_STEP_EN_MASK       0x40000000 /* [30:30] 0b01000000000000000000000000000000 */
#define READ_SYSTEM_MODE_IRQ_STEP_EN(base) \
    npu_reg_read_mask(base, REG_SYSTEM_MODE, SYSTEM_MODE_IRQ_STEP_EN_MASK, SYSTEM_MODE_IRQ_STEP_EN_OFFSET)
#define WRITE_SYSTEM_MODE_IRQ_STEP_EN(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_MODE, val, SYSTEM_MODE_IRQ_STEP_EN_MASK, SYSTEM_MODE_IRQ_STEP_EN_OFFSET)

/* SYSTEM.MODE.IRQ_INF_EN (Category: SYSTEM) */
#define SYSTEM_MODE_IRQ_INF_EN_LEN        1
#define SYSTEM_MODE_IRQ_INF_EN_OFFSET     31
#define SYSTEM_MODE_IRQ_INF_EN_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_MODE_IRQ_INF_EN_MASK       0x80000000 /* [31:31] 0b10000000000000000000000000000000 */
#define READ_SYSTEM_MODE_IRQ_INF_EN(base) \
    npu_reg_read_mask(base, REG_SYSTEM_MODE, SYSTEM_MODE_IRQ_INF_EN_MASK, SYSTEM_MODE_IRQ_INF_EN_OFFSET)
#define WRITE_SYSTEM_MODE_IRQ_INF_EN(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_MODE, val, SYSTEM_MODE_IRQ_INF_EN_MASK, SYSTEM_MODE_IRQ_INF_EN_OFFSET)

/* SYSTEM.CMD (Category: SYSTEM) */
#define READ_SYSTEM_CMD(base) npu_reg_read(base, REG_SYSTEM_CMD)
#define WRITE_SYSTEM_CMD(base, val) npu_reg_write(base, REG_SYSTEM_CMD, val)
/* SYSTEM.CMD.START (Category: SYSTEM) */
#define SYSTEM_CMD_START_LEN        1
#define SYSTEM_CMD_START_OFFSET     0
#define SYSTEM_CMD_START_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_CMD_START_MASK       0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define READ_SYSTEM_CMD_START(base) \
    npu_reg_read_mask(base, REG_SYSTEM_CMD, SYSTEM_CMD_START_MASK, SYSTEM_CMD_START_OFFSET)
#define WRITE_SYSTEM_CMD_START(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_CMD, val, SYSTEM_CMD_START_MASK, SYSTEM_CMD_START_OFFSET)

/* SYSTEM.CMD.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_CMD_RESERVED0_LEN        31
#define SYSTEM_CMD_RESERVED0_OFFSET     1
#define SYSTEM_CMD_RESERVED0_MASK_BITS  0x7fffffff /* [30:0] 0b01111111111111111111111111111111 */
#define SYSTEM_CMD_RESERVED0_MASK       0xfffffffe /* [31:1] 0b11111111111111111111111111111110 */
#define READ_SYSTEM_CMD_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_CMD, SYSTEM_CMD_RESERVED0_MASK, SYSTEM_CMD_RESERVED0_OFFSET)
#define WRITE_SYSTEM_CMD_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_CMD, val, SYSTEM_CMD_RESERVED0_MASK, SYSTEM_CMD_RESERVED0_OFFSET)

/* SYSTEM.CMD_STATUS (Category: SYSTEM) */
#define READ_SYSTEM_CMD_STATUS(base) npu_reg_read(base, REG_SYSTEM_CMD_STATUS)
#define WRITE_SYSTEM_CMD_STATUS(base, val) npu_reg_write(base, REG_SYSTEM_CMD_STATUS, val)
/* SYSTEM.CMD_STATUS.CMD_STATUS (Category: SYSTEM) */
#define SYSTEM_CMD_STATUS_CMD_STATUS_LEN        16
#define SYSTEM_CMD_STATUS_CMD_STATUS_OFFSET     0
#define SYSTEM_CMD_STATUS_CMD_STATUS_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_CMD_STATUS_CMD_STATUS_MASK       0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define READ_SYSTEM_CMD_STATUS_CMD_STATUS(base) \
    npu_reg_read_mask(base, REG_SYSTEM_CMD_STATUS, SYSTEM_CMD_STATUS_CMD_STATUS_MASK, SYSTEM_CMD_STATUS_CMD_STATUS_OFFSET)
#define WRITE_SYSTEM_CMD_STATUS_CMD_STATUS(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_CMD_STATUS, val, SYSTEM_CMD_STATUS_CMD_STATUS_MASK, SYSTEM_CMD_STATUS_CMD_STATUS_OFFSET)

/* SYSTEM.CMD_STATUS.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_CMD_STATUS_RESERVED0_LEN        16
#define SYSTEM_CMD_STATUS_RESERVED0_OFFSET     16
#define SYSTEM_CMD_STATUS_RESERVED0_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_CMD_STATUS_RESERVED0_MASK       0xffff0000 /* [31:16] 0b11111111111111110000000000000000 */
#define READ_SYSTEM_CMD_STATUS_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_CMD_STATUS, SYSTEM_CMD_STATUS_RESERVED0_MASK, SYSTEM_CMD_STATUS_RESERVED0_OFFSET)
#define WRITE_SYSTEM_CMD_STATUS_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_CMD_STATUS, val, SYSTEM_CMD_STATUS_RESERVED0_MASK, SYSTEM_CMD_STATUS_RESERVED0_OFFSET)

/* SYSTEM.FEATURE_BASE (Category: SYSTEM) */
#define READ_SYSTEM_FEATURE_BASE(base) npu_reg_read(base, REG_SYSTEM_FEATURE_BASE)
#define WRITE_SYSTEM_FEATURE_BASE(base, val) npu_reg_write(base, REG_SYSTEM_FEATURE_BASE, val)
/* SYSTEM.FEATURE_BASE.FEATURE_OFFSET (Category: SYSTEM) */
#define SYSTEM_FEATURE_BASE_FEATURE_OFFSET_LEN        32
#define SYSTEM_FEATURE_BASE_FEATURE_OFFSET_OFFSET     0
#define SYSTEM_FEATURE_BASE_FEATURE_OFFSET_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_FEATURE_BASE_FEATURE_OFFSET_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_FEATURE_BASE_FEATURE_OFFSET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_FEATURE_BASE, SYSTEM_FEATURE_BASE_FEATURE_OFFSET_MASK, SYSTEM_FEATURE_BASE_FEATURE_OFFSET_OFFSET)
#define WRITE_SYSTEM_FEATURE_BASE_FEATURE_OFFSET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_FEATURE_BASE, val, SYSTEM_FEATURE_BASE_FEATURE_OFFSET_MASK, SYSTEM_FEATURE_BASE_FEATURE_OFFSET_OFFSET)

/* SYSTEM.WEIGHT_BASE (Category: SYSTEM) */
#define READ_SYSTEM_WEIGHT_BASE(base) npu_reg_read(base, REG_SYSTEM_WEIGHT_BASE)
#define WRITE_SYSTEM_WEIGHT_BASE(base, val) npu_reg_write(base, REG_SYSTEM_WEIGHT_BASE, val)
/* SYSTEM.WEIGHT_BASE.WEIGHT_OFFSET (Category: SYSTEM) */
#define SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_LEN        32
#define SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_OFFSET     0
#define SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_WEIGHT_BASE, SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_MASK, SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_OFFSET)
#define WRITE_SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_WEIGHT_BASE, val, SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_MASK, SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_OFFSET)

/* SYSTEM.SWREG0 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG0(base) npu_reg_read(base, REG_SYSTEM_SWREG0)
#define WRITE_SYSTEM_SWREG0(base, val) npu_reg_write(base, REG_SYSTEM_SWREG0, val)
/* SYSTEM.SWREG0.SWREG0 (Category: SYSTEM) */
#define SYSTEM_SWREG0_SWREG0_LEN        32
#define SYSTEM_SWREG0_SWREG0_OFFSET     0
#define SYSTEM_SWREG0_SWREG0_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG0_SWREG0_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG0_SWREG0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG0, SYSTEM_SWREG0_SWREG0_MASK, SYSTEM_SWREG0_SWREG0_OFFSET)
#define WRITE_SYSTEM_SWREG0_SWREG0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG0, val, SYSTEM_SWREG0_SWREG0_MASK, SYSTEM_SWREG0_SWREG0_OFFSET)

/* SYSTEM.SWREG1 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG1(base) npu_reg_read(base, REG_SYSTEM_SWREG1)
#define WRITE_SYSTEM_SWREG1(base, val) npu_reg_write(base, REG_SYSTEM_SWREG1, val)
/* SYSTEM.SWREG1.SWREG1 (Category: SYSTEM) */
#define SYSTEM_SWREG1_SWREG1_LEN        32
#define SYSTEM_SWREG1_SWREG1_OFFSET     0
#define SYSTEM_SWREG1_SWREG1_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG1_SWREG1_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG1_SWREG1(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG1, SYSTEM_SWREG1_SWREG1_MASK, SYSTEM_SWREG1_SWREG1_OFFSET)
#define WRITE_SYSTEM_SWREG1_SWREG1(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG1, val, SYSTEM_SWREG1_SWREG1_MASK, SYSTEM_SWREG1_SWREG1_OFFSET)

/* SYSTEM.SWREG2 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG2(base) npu_reg_read(base, REG_SYSTEM_SWREG2)
#define WRITE_SYSTEM_SWREG2(base, val) npu_reg_write(base, REG_SYSTEM_SWREG2, val)
/* SYSTEM.SWREG2.SWREG2 (Category: SYSTEM) */
#define SYSTEM_SWREG2_SWREG2_LEN        32
#define SYSTEM_SWREG2_SWREG2_OFFSET     0
#define SYSTEM_SWREG2_SWREG2_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG2_SWREG2_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG2_SWREG2(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG2, SYSTEM_SWREG2_SWREG2_MASK, SYSTEM_SWREG2_SWREG2_OFFSET)
#define WRITE_SYSTEM_SWREG2_SWREG2(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG2, val, SYSTEM_SWREG2_SWREG2_MASK, SYSTEM_SWREG2_SWREG2_OFFSET)

/* SYSTEM.SWREG3 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG3(base) npu_reg_read(base, REG_SYSTEM_SWREG3)
#define WRITE_SYSTEM_SWREG3(base, val) npu_reg_write(base, REG_SYSTEM_SWREG3, val)
/* SYSTEM.SWREG3.SWREG3 (Category: SYSTEM) */
#define SYSTEM_SWREG3_SWREG3_LEN        32
#define SYSTEM_SWREG3_SWREG3_OFFSET     0
#define SYSTEM_SWREG3_SWREG3_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG3_SWREG3_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG3_SWREG3(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG3, SYSTEM_SWREG3_SWREG3_MASK, SYSTEM_SWREG3_SWREG3_OFFSET)
#define WRITE_SYSTEM_SWREG3_SWREG3(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG3, val, SYSTEM_SWREG3_SWREG3_MASK, SYSTEM_SWREG3_SWREG3_OFFSET)


#endif // __NPU_REG_SYSTEM_DX_L1_H
