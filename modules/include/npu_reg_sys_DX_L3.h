// SPDX-License-Identifier: GPL-2.0
/*
 * Deepx Runtime Driver
 *
 * Copyright (C) 2023 Deepx, Inc.
 *
 */
#ifndef __NPU_REG_SYSTEM_DX_L3_H
#define __NPU_REG_SYSTEM_DX_L3_H

#include <linux/types.h>

/* Address */
#define REG_SYSTEM_OFFSET 0x0
#define REG_SYSTEM_ID    (REG_SYSTEM_OFFSET + 0x00000000) /* 0 */
#define REG_SYSTEM_RUN_OPT    (REG_SYSTEM_OFFSET + 0x00000004) /* 4 */
#define REG_SYSTEM_STATUS1    (REG_SYSTEM_OFFSET + 0x00000008) /* 8 */
#define REG_SYSTEM_STATUS2    (REG_SYSTEM_OFFSET + 0x0000000c) /* 12 */
#define REG_SYSTEM_NET_INFO    (REG_SYSTEM_OFFSET + 0x00000010) /* 16 */
#define REG_SYSTEM_IRQ_STATUS    (REG_SYSTEM_OFFSET + 0x00000014) /* 20 */
#define REG_SYSTEM_IRQ_SET    (REG_SYSTEM_OFFSET + 0x00000018) /* 24 */
#define REG_SYSTEM_IRQ_CNT0    (REG_SYSTEM_OFFSET + 0x0000001c) /* 28 */
#define REG_SYSTEM_IRQ_CNT1    (REG_SYSTEM_OFFSET + 0x00000020) /* 32 */
#define REG_SYSTEM_IRQ_CNT2    (REG_SYSTEM_OFFSET + 0x00000024) /* 36 */
#define REG_SYSTEM_IN_FEATURE_BASE    (REG_SYSTEM_OFFSET + 0x00000028) /* 40 */
#define REG_SYSTEM_OUT_FEATURE_BASE    (REG_SYSTEM_OFFSET + 0x0000002c) /* 44 */
#define REG_SYSTEM_WEIGHT_BASE    (REG_SYSTEM_OFFSET + 0x00000030) /* 48 */
#define REG_SYSTEM_IRQ_TIMER_DMA    (REG_SYSTEM_OFFSET + 0x00000034) /* 52 */
#define REG_SYSTEM_IRQ_TIMER_OP    (REG_SYSTEM_OFFSET + 0x00000038) /* 56 */
#define REG_SYSTEM_CMD    (REG_SYSTEM_OFFSET + 0x0000003c) /* 60 */
#define REG_SYSTEM_SWREG0    (REG_SYSTEM_OFFSET + 0x00000040) /* 64 */
#define REG_SYSTEM_SWREG1    (REG_SYSTEM_OFFSET + 0x00000044) /* 68 */
#define REG_SYSTEM_SWREG2    (REG_SYSTEM_OFFSET + 0x00000048) /* 72 */
#define REG_SYSTEM_SWREG3    (REG_SYSTEM_OFFSET + 0x0000004c) /* 76 */
#define REG_SYSTEM_SWREG4    (REG_SYSTEM_OFFSET + 0x00000050) /* 80 */
#define REG_SYSTEM_SWREG5    (REG_SYSTEM_OFFSET + 0x00000054) /* 84 */
#define REG_SYSTEM_SWREG6    (REG_SYSTEM_OFFSET + 0x00000058) /* 88 */
#define REG_SYSTEM_SWREG7    (REG_SYSTEM_OFFSET + 0x0000005c) /* 92 */
#define REG_SYSTEM_SWREG8    (REG_SYSTEM_OFFSET + 0x00000060) /* 96 */
#define REG_SYSTEM_SWREG9    (REG_SYSTEM_OFFSET + 0x00000064) /* 100 */
#define REG_SYSTEM_SWREG10    (REG_SYSTEM_OFFSET + 0x00000068) /* 104 */
#define REG_SYSTEM_SWREG11    (REG_SYSTEM_OFFSET + 0x0000006c) /* 108 */
#define REG_SYSTEM_SWREG12    (REG_SYSTEM_OFFSET + 0x00000070) /* 112 */
#define REG_SYSTEM_SWREG13    (REG_SYSTEM_OFFSET + 0x00000074) /* 116 */
#define REG_SYSTEM_SWREG14    (REG_SYSTEM_OFFSET + 0x00000078) /* 120 */
#define REG_SYSTEM_SWREG15    (REG_SYSTEM_OFFSET + 0x0000007c) /* 124 */
#define REG_SYSTEM_PPU_OUT_FILTER_INFO    (REG_SYSTEM_OFFSET + 0x00000080) /* 128 */
#define REG_SYSTEM_PPU_OUT_FEATURE_BASE    (REG_SYSTEM_OFFSET + 0x00000084) /* 132 */
#define REG_SYSTEM_RSV0    (REG_SYSTEM_OFFSET + 0x00000088) /* 136 */
#define REG_SYSTEM_RSV1    (REG_SYSTEM_OFFSET + 0x0000008c) /* 140 */
#define REG_SYSTEM_RSV2    (REG_SYSTEM_OFFSET + 0x00000090) /* 144 */
#define REG_SYSTEM_RSV3    (REG_SYSTEM_OFFSET + 0x00000094) /* 148 */

/* Register Definition */
typedef volatile union _SYSTEM_ID_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.ID*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t RMAP_ID:16;  /* SYSTEM.ID.RMAP_ID [15:0] (R, 0x11) RMAP VERSION */
        volatile uint32_t REVISION_ID:6;  /* SYSTEM.ID.REVISION_ID [21:16] (R, 0x0) RTL REVISION # */
        volatile uint32_t RESERVED0:2;  /* SYSTEM.ID.RESERVED0 [23:22] (R, 0x0)  */
        volatile uint32_t DEVICE_ID:8;  /* SYSTEM.ID.DEVICE_ID [31:24] (R, 0xa3) L1:A1, L2:A2, L3:A3, M1:B1, M1A:B2 */
    };
} SYSTEM_ID_t;
typedef volatile union _SYSTEM_RUN_OPT_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.RUN_OPT*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t RESERVED0:31;  /* SYSTEM.RUN_OPT.RESERVED0 [30:0] (R, 0x0)  */
        volatile uint32_t AUTORUN_EN:1;  /* SYSTEM.RUN_OPT.AUTORUN_EN [31:31] (RW, 0x0) INFERENCE 종료 後, NEXT INFERENCE 자동 START */
    };
} SYSTEM_RUN_OPT_t;
typedef volatile union _SYSTEM_STATUS1_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.STATUS1*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t CMD_NUM:16;  /* SYSTEM.STATUS1.CMD_NUM [15:0] (R, 0x0) 현재 수행중인 TILE NO.(0~) */
        volatile uint32_t ARGMAX_ID:16;  /* SYSTEM.STATUS1.ARGMAX_ID [31:16] (R, 0x0) 최종 검출된 CLASS INDEX NO.(IC MODEL) */
    };
} SYSTEM_STATUS1_t;
typedef volatile union _SYSTEM_STATUS2_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.STATUS2*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t BUSY:1;  /* SYSTEM.STATUS2.BUSY [0:0] (R, 0x0) NPU 동작상태 */
        volatile uint32_t RESERVED0:31;  /* SYSTEM.STATUS2.RESERVED0 [31:1] (R, 0x0)  */
    };
} SYSTEM_STATUS2_t;
typedef volatile union _SYSTEM_NET_INFO_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.NET_INFO*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t LAST_CMD_NUM:16;  /* SYSTEM.NET_INFO.LAST_CMD_NUM [15:0] (RW, 0x0) NETWORK 구동에 사용되는 RMAP TILE 개수 */
        volatile uint32_t RESERVED0:16;  /* SYSTEM.NET_INFO.RESERVED0 [31:16] (R, 0x0)  */
    };
} SYSTEM_NET_INFO_t;
typedef volatile union _SYSTEM_IRQ_STATUS_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.IRQ_STATUS*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t STATUS_TILE:16;  /* SYSTEM.IRQ_STATUS.STATUS_TILE [15:0] (R, 0x0) IRQ 발생 TILE NO.(ONLY ABNORMAL IRQ 만, FRAME/TILE/INPUT_DONE 제외) */
        volatile uint32_t STATUS_OP:4;  /* SYSTEM.IRQ_STATUS.STATUS_OP [19:16] (R, 0x0) IRQ 발생 TILE OPERATION(ONLY ABNORMAL IRQ 만, FRAME/TILE/INPUT_DONE 제외) */
        volatile uint32_t RESERVED0:1;  /* SYSTEM.IRQ_STATUS.RESERVED0 [20:20] (R, 0x0)  */
        volatile uint32_t IRQ_MEM_COLLISION:1;  /* SYSTEM.IRQ_STATUS.IRQ_MEM_COLLISION [21:21] (R, 0x0) SRAM 같은 BANK 접근 */
        volatile uint32_t IRQ_CMD_REACHED:1;  /* SYSTEM.IRQ_STATUS.IRQ_CMD_REACHED [22:22] (R, 0x0) RMAP LAST ADDRESS NOT REACHED */
        volatile uint32_t IRQ_CMD_CKSUM:1;  /* SYSTEM.IRQ_STATUS.IRQ_CMD_CKSUM [23:23] (R, 0x0) RMAP DATA 무결성 CHECK */
        volatile uint32_t IRQ_NPU_FIFO:1;  /* SYSTEM.IRQ_STATUS.IRQ_NPU_FIFO [24:24] (R, 0x0) SFU 내부 FIFO 오동작 */
        volatile uint32_t IRQ_DMA_FIFO_NCLK:1;  /* SYSTEM.IRQ_STATUS.IRQ_DMA_FIFO_NCLK [25:25] (R, 0x0) DMA 내부 FIFO 오동작(NPU CLOCK 사용) */
        volatile uint32_t IRQ_DMA_FIFO_ACLK:1;  /* SYSTEM.IRQ_STATUS.IRQ_DMA_FIFO_ACLK [26:26] (R, 0x0) DMA 내부 FIFO 오동작(AXI CLOCK 사용) */
        volatile uint32_t IRQ_TIMEOUT_OP:1;  /* SYSTEM.IRQ_STATUS.IRQ_TIMEOUT_OP [27:27] (R, 0x0) NPU 오동작으로 인한 OPERATION TIME 잘못 계산 */
        volatile uint32_t IRQ_TIMEOUT_DMA:1;  /* SYSTEM.IRQ_STATUS.IRQ_TIMEOUT_DMA [28:28] (R, 0x0) AXI ↔ DMA 오동작으로 인한 DRAM WRITE/READ TIME OUT */
        volatile uint32_t IRQ_INPUT_DONE:1;  /* SYSTEM.IRQ_STATUS.IRQ_INPUT_DONE [29:29] (R, 0x0) IMG 사용 종료 */
        volatile uint32_t IRQ_TILE:1;  /* SYSTEM.IRQ_STATUS.IRQ_TILE [30:30] (R, 0x0) TILE OPERATION 종료 */
        volatile uint32_t IRQ_FRAME:1;  /* SYSTEM.IRQ_STATUS.IRQ_FRAME [31:31] (R, 0x0) INFERENCE 종료 */
    };
} SYSTEM_IRQ_STATUS_t;
typedef volatile union _SYSTEM_IRQ_SET_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.IRQ_SET*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t RESERVED0:21;  /* SYSTEM.IRQ_SET.RESERVED0 [20:0] (R, 0x0) IRQ_FRAME COUNT */
        volatile uint32_t IRQ_MEM_COLLISION_SET:1;  /* SYSTEM.IRQ_SET.IRQ_MEM_COLLISION_SET [21:21] (RW, 0x0) 1: NPU OUTPUT 반영, 0: 내부 MONITORING만 사용 */
        volatile uint32_t IRQ_CMD_REACHED_SET:1;  /* SYSTEM.IRQ_SET.IRQ_CMD_REACHED_SET [22:22] (RW, 0x0) 1: NPU OUTPUT 반영, 0: 내부 MONITORING만 사용 */
        volatile uint32_t IRQ_CMD_CKSUM_SET:1;  /* SYSTEM.IRQ_SET.IRQ_CMD_CKSUM_SET [23:23] (RW, 0x0) 1: NPU OUTPUT 반영, 0: 내부 MONITORING만 사용 */
        volatile uint32_t IRQ_NPU_FIFO_SET:1;  /* SYSTEM.IRQ_SET.IRQ_NPU_FIFO_SET [24:24] (RW, 0x0) 1: NPU OUTPUT 반영, 0: 내부 MONITORING만 사용 */
        volatile uint32_t IRQ_DMA_FIFO_SET:2;  /* SYSTEM.IRQ_SET.IRQ_DMA_FIFO_SET [26:25] (RW, 0x0) 1:ACLK, 0:NCLK */
        volatile uint32_t IRQ_TIMEOUT_OP_SET:1;  /* SYSTEM.IRQ_SET.IRQ_TIMEOUT_OP_SET [27:27] (RW, 0x0) 1: NPU OUTPUT 반영, 0: 내부 MONITORING만 사용 */
        volatile uint32_t IRQ_TIMEOUT_DMA_SET:1;  /* SYSTEM.IRQ_SET.IRQ_TIMEOUT_DMA_SET [28:28] (RW, 0x0) 1: NPU OUTPUT 반영, 0: 내부 MONITORING만 사용 */
        volatile uint32_t IRQ_INPUT_DONE_SET:1;  /* SYSTEM.IRQ_SET.IRQ_INPUT_DONE_SET [29:29] (RW, 0x0) 1: NPU OUTPUT 반영, 0: 내부 MONITORING만 사용 */
        volatile uint32_t IRQ_TILE_SET:1;  /* SYSTEM.IRQ_SET.IRQ_TILE_SET [30:30] (RW, 0x0) 1: NPU OUTPUT 반영, 0: 내부 MONITORING만 사용 */
        volatile uint32_t IRQ_FRAME_SET:1;  /* SYSTEM.IRQ_SET.IRQ_FRAME_SET [31:31] (RW, 0x0) 1: NPU OUTPUT 반영, 0: 내부 MONITORING만 사용 */
    };
} SYSTEM_IRQ_SET_t;
typedef volatile union _SYSTEM_IRQ_CNT0_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.IRQ_CNT0*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t IRQ_CNT_NPU_NORMAL:32;  /* SYSTEM.IRQ_CNT0.IRQ_CNT_NPU_NORMAL [31:0] (R, 0x0) IRQ_INPUT_DONE COUNT */
    };
} SYSTEM_IRQ_CNT0_t;
typedef volatile union _SYSTEM_IRQ_CNT1_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.IRQ_CNT1*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t IRQ_CNT_NPU_INPUT_DONE:32;  /* SYSTEM.IRQ_CNT1.IRQ_CNT_NPU_INPUT_DONE [31:0] (R, 0x0)  */
    };
} SYSTEM_IRQ_CNT1_t;
typedef volatile union _SYSTEM_IRQ_CNT2_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.IRQ_CNT2*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t IRQ_CNT_NPU_ABNORMAL:32;  /* SYSTEM.IRQ_CNT2.IRQ_CNT_NPU_ABNORMAL [31:0] (R, 0x0)  */
    };
} SYSTEM_IRQ_CNT2_t;
typedef volatile union _SYSTEM_IN_FEATURE_BASE_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.IN_FEATURE_BASE*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t IN_FEATURE_OFFSET:32;  /* SYSTEM.IN_FEATURE_BASE.IN_FEATURE_OFFSET [31:0] (RW, 0x0) IMG DDR BASE ADDRESS */
    };
} SYSTEM_IN_FEATURE_BASE_t;
typedef volatile union _SYSTEM_OUT_FEATURE_BASE_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.OUT_FEATURE_BASE*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t OUT_FEATURE_OFFSET:32;  /* SYSTEM.OUT_FEATURE_BASE.OUT_FEATURE_OFFSET [31:0] (RW, 0x0) TENSOR(NPU에서 발생하는 모든 DATA) DDR BASE ADDRESS */
    };
} SYSTEM_OUT_FEATURE_BASE_t;
typedef volatile union _SYSTEM_WEIGHT_BASE_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.WEIGHT_BASE*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t WEIGHT_OFFSET:32;  /* SYSTEM.WEIGHT_BASE.WEIGHT_OFFSET [31:0] (RW, 0x0) WEIGHT DDR BASE ADDRESS */
    };
} SYSTEM_WEIGHT_BASE_t;
typedef volatile union _SYSTEM_IRQ_TIMER_DMA_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.IRQ_TIMER_DMA*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t IRQ_TIMER_DMA:32;  /* SYSTEM.IRQ_TIMER_DMA.IRQ_TIMER_DMA [31:0] (RW, 0xffffffff) IRQ_TIMEOUT_DMA의 TIMER(1.25GHZ, 1SEC:4A817C80) */
    };
} SYSTEM_IRQ_TIMER_DMA_t;
typedef volatile union _SYSTEM_IRQ_TIMER_OP_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.IRQ_TIMER_OP*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t IRQ_TIMER_OP:32;  /* SYSTEM.IRQ_TIMER_OP.IRQ_TIMER_OP [31:0] (RW, 0xffffffff) IRQ_TIMEOUT_OP의 TIMER(1.25GHZ, 1SEC:4A817C80) */
    };
} SYSTEM_IRQ_TIMER_OP_t;
typedef volatile union _SYSTEM_CMD_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.CMD*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t START:1;  /* SYSTEM.CMD.START [0:0] (RW, 0x0) NPU INFERENCE START */
        volatile uint32_t RESERVED0:31;  /* SYSTEM.CMD.RESERVED0 [31:1] (R, 0x0)  */
    };
} SYSTEM_CMD_t;
typedef volatile union _SYSTEM_SWREG0_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG0*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG0:32;  /* SYSTEM.SWREG0.SWREG0 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG0_t;
typedef volatile union _SYSTEM_SWREG1_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG1*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG1:32;  /* SYSTEM.SWREG1.SWREG1 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG1_t;
typedef volatile union _SYSTEM_SWREG2_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG2*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG2:32;  /* SYSTEM.SWREG2.SWREG2 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG2_t;
typedef volatile union _SYSTEM_SWREG3_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG3*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG3:32;  /* SYSTEM.SWREG3.SWREG3 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG3_t;
typedef volatile union _SYSTEM_SWREG4_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG4*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG4:32;  /* SYSTEM.SWREG4.SWREG4 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG4_t;
typedef volatile union _SYSTEM_SWREG5_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG5*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG5:32;  /* SYSTEM.SWREG5.SWREG5 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG5_t;
typedef volatile union _SYSTEM_SWREG6_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG6*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG6:32;  /* SYSTEM.SWREG6.SWREG6 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG6_t;
typedef volatile union _SYSTEM_SWREG7_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG7*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG7:32;  /* SYSTEM.SWREG7.SWREG7 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG7_t;
typedef volatile union _SYSTEM_SWREG8_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG8*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG8:32;  /* SYSTEM.SWREG8.SWREG8 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG8_t;
typedef volatile union _SYSTEM_SWREG9_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG9*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG9:32;  /* SYSTEM.SWREG9.SWREG9 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG9_t;
typedef volatile union _SYSTEM_SWREG10_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG10*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG10:32;  /* SYSTEM.SWREG10.SWREG10 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG10_t;
typedef volatile union _SYSTEM_SWREG11_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG11*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG11:32;  /* SYSTEM.SWREG11.SWREG11 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG11_t;
typedef volatile union _SYSTEM_SWREG12_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG12*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG12:32;  /* SYSTEM.SWREG12.SWREG12 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG12_t;
typedef volatile union _SYSTEM_SWREG13_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG13*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG13:32;  /* SYSTEM.SWREG13.SWREG13 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG13_t;
typedef volatile union _SYSTEM_SWREG14_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG14*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG14:32;  /* SYSTEM.SWREG14.SWREG14 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG14_t;
typedef volatile union _SYSTEM_SWREG15_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.SWREG15*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t SWREG15:32;  /* SYSTEM.SWREG15.SWREG15 [31:0] (RW, 0x0) RT 사용 REGISTER */
    };
} SYSTEM_SWREG15_t;
typedef volatile union _SYSTEM_PPU_OUT_FILTER_INFO_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.PPU_OUT_FILTER_INFO*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t PPU_FILTERING_NUM:16;  /* SYSTEM.PPU_OUT_FILTER_INFO.PPU_FILTERING_NUM [15:0] (R, 0x0) TOTAL NUMBER OF FILTERING RESULT COUNTS */
        volatile uint32_t PPU_FILTERING_WNUM:16;  /* SYSTEM.PPU_OUT_FILTER_INFO.PPU_FILTERING_WNUM [31:16] (R, 0x0) TOTAL NUMBER OF FILTERING RESULT COUNTS(WORD-INIT) */
    };
} SYSTEM_PPU_OUT_FILTER_INFO_t;
typedef volatile union _SYSTEM_PPU_OUT_FEATURE_BASE_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.PPU_OUT_FEATURE_BASE*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t PPU_OUT_FEATURE_OFFSET:32;  /* SYSTEM.PPU_OUT_FEATURE_BASE.PPU_OUT_FEATURE_OFFSET [31:0] (RW, 0x0) POST-PROCESS OUTPUT(BOX INFO) DDR BASE ADDRESS */
    };
} SYSTEM_PPU_OUT_FEATURE_BASE_t;
typedef volatile union _SYSTEM_RSV0_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.RSV0*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t RESERVED0:32;  /* SYSTEM.RSV0.RESERVED0 [31:0] (R, 0x0)  */
    };
} SYSTEM_RSV0_t;
typedef volatile union _SYSTEM_RSV1_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.RSV1*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t RESERVED0:32;  /* SYSTEM.RSV1.RESERVED0 [31:0] (R, 0x0)  */
    };
} SYSTEM_RSV1_t;
typedef volatile union _SYSTEM_RSV2_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.RSV2*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t RESERVED0:32;  /* SYSTEM.RSV2.RESERVED0 [31:0] (R, 0x0)  */
    };
} SYSTEM_RSV2_t;
typedef volatile union _SYSTEM_RSV3_t
{
    volatile uint32_t U;  /* Register-Access : SYSTEM.RSV3*/
    struct {     /* Register-Bitfields-Access */
        volatile uint32_t RESERVED0:32;  /* SYSTEM.RSV3.RESERVED0 [31:0] (R, 0x0)  */
    };
} SYSTEM_RSV3_t;

/* SYSTEM Module Definition */
typedef volatile struct _dxSYSTEM_t
{
    SYSTEM_ID_t ID;  /* SYSTEM 0x0 */
    SYSTEM_RUN_OPT_t RUN_OPT;  /* SYSTEM 0x4 */
    SYSTEM_STATUS1_t STATUS1;  /* SYSTEM 0x8 */
    SYSTEM_STATUS2_t STATUS2;  /* SYSTEM 0xc */
    SYSTEM_NET_INFO_t NET_INFO;  /* SYSTEM 0x10 */
    SYSTEM_IRQ_STATUS_t IRQ_STATUS;  /* SYSTEM 0x14 */
    SYSTEM_IRQ_SET_t IRQ_SET;  /* SYSTEM 0x18 */
    SYSTEM_IRQ_CNT0_t IRQ_CNT0;  /* SYSTEM 0x1c */
    SYSTEM_IRQ_CNT1_t IRQ_CNT1;  /* SYSTEM 0x20 */
    SYSTEM_IRQ_CNT2_t IRQ_CNT2;  /* SYSTEM 0x24 */
    SYSTEM_IN_FEATURE_BASE_t IN_FEATURE_BASE;  /* SYSTEM 0x28 */
    SYSTEM_OUT_FEATURE_BASE_t OUT_FEATURE_BASE;  /* SYSTEM 0x2c */
    SYSTEM_WEIGHT_BASE_t WEIGHT_BASE;  /* SYSTEM 0x30 */
    SYSTEM_IRQ_TIMER_DMA_t IRQ_TIMER_DMA;  /* SYSTEM 0x34 */
    SYSTEM_IRQ_TIMER_OP_t IRQ_TIMER_OP;  /* SYSTEM 0x38 */
    SYSTEM_CMD_t CMD;  /* SYSTEM 0x3c */
    SYSTEM_SWREG0_t SWREG0;  /* SYSTEM 0x40 */
    SYSTEM_SWREG1_t SWREG1;  /* SYSTEM 0x44 */
    SYSTEM_SWREG2_t SWREG2;  /* SYSTEM 0x48 */
    SYSTEM_SWREG3_t SWREG3;  /* SYSTEM 0x4c */
    SYSTEM_SWREG4_t SWREG4;  /* SYSTEM 0x50 */
    SYSTEM_SWREG5_t SWREG5;  /* SYSTEM 0x54 */
    SYSTEM_SWREG6_t SWREG6;  /* SYSTEM 0x58 */
    SYSTEM_SWREG7_t SWREG7;  /* SYSTEM 0x5c */
    SYSTEM_SWREG8_t SWREG8;  /* SYSTEM 0x60 */
    SYSTEM_SWREG9_t SWREG9;  /* SYSTEM 0x64 */
    SYSTEM_SWREG10_t SWREG10;  /* SYSTEM 0x68 */
    SYSTEM_SWREG11_t SWREG11;  /* SYSTEM 0x6c */
    SYSTEM_SWREG12_t SWREG12;  /* SYSTEM 0x70 */
    SYSTEM_SWREG13_t SWREG13;  /* SYSTEM 0x74 */
    SYSTEM_SWREG14_t SWREG14;  /* SYSTEM 0x78 */
    SYSTEM_SWREG15_t SWREG15;  /* SYSTEM 0x7c */
    SYSTEM_PPU_OUT_FILTER_INFO_t PPU_OUT_FILTER_INFO;  /* SYSTEM 0x80 */
    SYSTEM_PPU_OUT_FEATURE_BASE_t PPU_OUT_FEATURE_BASE;  /* SYSTEM 0x84 */
    SYSTEM_RSV0_t RSV0;  /* SYSTEM 0x88 */
    SYSTEM_RSV1_t RSV1;  /* SYSTEM 0x8c */
    SYSTEM_RSV2_t RSV2;  /* SYSTEM 0x90 */
    SYSTEM_RSV3_t RSV3;  /* SYSTEM 0x94 */
} dxSYSTEM_t;

/* Register access API */
/* SYSTEM.ID (Category: SYSTEM) */
#define READ_SYSTEM_ID(base) npu_reg_read(base, REG_SYSTEM_ID)
#define WRITE_SYSTEM_ID(base, val) npu_reg_write(base, REG_SYSTEM_ID, val)
/* SYSTEM.ID.RMAP_ID (Category: SYSTEM) */
#define SYSTEM_ID_RMAP_ID_LEN        16
#define SYSTEM_ID_RMAP_ID_OFFSET     0
#define SYSTEM_ID_RMAP_ID_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_ID_RMAP_ID_MASK       0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define READ_SYSTEM_ID_RMAP_ID(base) \
    npu_reg_read_mask(base, REG_SYSTEM_ID, SYSTEM_ID_RMAP_ID_MASK, SYSTEM_ID_RMAP_ID_OFFSET)
#define WRITE_SYSTEM_ID_RMAP_ID(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_ID, val, SYSTEM_ID_RMAP_ID_MASK, SYSTEM_ID_RMAP_ID_OFFSET)

/* SYSTEM.ID.REVISION_ID (Category: SYSTEM) */
#define SYSTEM_ID_REVISION_ID_LEN        6
#define SYSTEM_ID_REVISION_ID_OFFSET     16
#define SYSTEM_ID_REVISION_ID_MASK_BITS  0x0000003f /* [5:0] 0b00000000000000000000000000111111 */
#define SYSTEM_ID_REVISION_ID_MASK       0x003f0000 /* [21:16] 0b00000000001111110000000000000000 */
#define READ_SYSTEM_ID_REVISION_ID(base) \
    npu_reg_read_mask(base, REG_SYSTEM_ID, SYSTEM_ID_REVISION_ID_MASK, SYSTEM_ID_REVISION_ID_OFFSET)
#define WRITE_SYSTEM_ID_REVISION_ID(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_ID, val, SYSTEM_ID_REVISION_ID_MASK, SYSTEM_ID_REVISION_ID_OFFSET)

/* SYSTEM.ID.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_ID_RESERVED0_LEN        2
#define SYSTEM_ID_RESERVED0_OFFSET     22
#define SYSTEM_ID_RESERVED0_MASK_BITS  0x00000003 /* [1:0] 0b00000000000000000000000000000011 */
#define SYSTEM_ID_RESERVED0_MASK       0x00c00000 /* [23:22] 0b00000000110000000000000000000000 */
#define READ_SYSTEM_ID_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_ID, SYSTEM_ID_RESERVED0_MASK, SYSTEM_ID_RESERVED0_OFFSET)
#define WRITE_SYSTEM_ID_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_ID, val, SYSTEM_ID_RESERVED0_MASK, SYSTEM_ID_RESERVED0_OFFSET)

/* SYSTEM.ID.DEVICE_ID (Category: SYSTEM) */
#define SYSTEM_ID_DEVICE_ID_LEN        8
#define SYSTEM_ID_DEVICE_ID_OFFSET     24
#define SYSTEM_ID_DEVICE_ID_MASK_BITS  0x000000ff /* [7:0] 0b00000000000000000000000011111111 */
#define SYSTEM_ID_DEVICE_ID_MASK       0xff000000 /* [31:24] 0b11111111000000000000000000000000 */
#define READ_SYSTEM_ID_DEVICE_ID(base) \
    npu_reg_read_mask(base, REG_SYSTEM_ID, SYSTEM_ID_DEVICE_ID_MASK, SYSTEM_ID_DEVICE_ID_OFFSET)
#define WRITE_SYSTEM_ID_DEVICE_ID(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_ID, val, SYSTEM_ID_DEVICE_ID_MASK, SYSTEM_ID_DEVICE_ID_OFFSET)

/* SYSTEM.RUN_OPT (Category: SYSTEM) */
#define READ_SYSTEM_RUN_OPT(base) npu_reg_read(base, REG_SYSTEM_RUN_OPT)
#define WRITE_SYSTEM_RUN_OPT(base, val) npu_reg_write(base, REG_SYSTEM_RUN_OPT, val)
/* SYSTEM.RUN_OPT.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_RUN_OPT_RESERVED0_LEN        31
#define SYSTEM_RUN_OPT_RESERVED0_OFFSET     0
#define SYSTEM_RUN_OPT_RESERVED0_MASK_BITS  0x7fffffff /* [30:0] 0b01111111111111111111111111111111 */
#define SYSTEM_RUN_OPT_RESERVED0_MASK       0x7fffffff /* [30:0] 0b01111111111111111111111111111111 */
#define READ_SYSTEM_RUN_OPT_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_RUN_OPT, SYSTEM_RUN_OPT_RESERVED0_MASK, SYSTEM_RUN_OPT_RESERVED0_OFFSET)
#define WRITE_SYSTEM_RUN_OPT_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_RUN_OPT, val, SYSTEM_RUN_OPT_RESERVED0_MASK, SYSTEM_RUN_OPT_RESERVED0_OFFSET)

/* SYSTEM.RUN_OPT.AUTORUN_EN (Category: SYSTEM) */
#define SYSTEM_RUN_OPT_AUTORUN_EN_LEN        1
#define SYSTEM_RUN_OPT_AUTORUN_EN_OFFSET     31
#define SYSTEM_RUN_OPT_AUTORUN_EN_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_RUN_OPT_AUTORUN_EN_MASK       0x80000000 /* [31:31] 0b10000000000000000000000000000000 */
#define READ_SYSTEM_RUN_OPT_AUTORUN_EN(base) \
    npu_reg_read_mask(base, REG_SYSTEM_RUN_OPT, SYSTEM_RUN_OPT_AUTORUN_EN_MASK, SYSTEM_RUN_OPT_AUTORUN_EN_OFFSET)
#define WRITE_SYSTEM_RUN_OPT_AUTORUN_EN(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_RUN_OPT, val, SYSTEM_RUN_OPT_AUTORUN_EN_MASK, SYSTEM_RUN_OPT_AUTORUN_EN_OFFSET)

/* SYSTEM.STATUS1 (Category: SYSTEM) */
#define READ_SYSTEM_STATUS1(base) npu_reg_read(base, REG_SYSTEM_STATUS1)
#define WRITE_SYSTEM_STATUS1(base, val) npu_reg_write(base, REG_SYSTEM_STATUS1, val)
/* SYSTEM.STATUS1.CMD_NUM (Category: SYSTEM) */
#define SYSTEM_STATUS1_CMD_NUM_LEN        16
#define SYSTEM_STATUS1_CMD_NUM_OFFSET     0
#define SYSTEM_STATUS1_CMD_NUM_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_STATUS1_CMD_NUM_MASK       0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define READ_SYSTEM_STATUS1_CMD_NUM(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS1, SYSTEM_STATUS1_CMD_NUM_MASK, SYSTEM_STATUS1_CMD_NUM_OFFSET)
#define WRITE_SYSTEM_STATUS1_CMD_NUM(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS1, val, SYSTEM_STATUS1_CMD_NUM_MASK, SYSTEM_STATUS1_CMD_NUM_OFFSET)

/* SYSTEM.STATUS1.ARGMAX_ID (Category: SYSTEM) */
#define SYSTEM_STATUS1_ARGMAX_ID_LEN        16
#define SYSTEM_STATUS1_ARGMAX_ID_OFFSET     16
#define SYSTEM_STATUS1_ARGMAX_ID_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_STATUS1_ARGMAX_ID_MASK       0xffff0000 /* [31:16] 0b11111111111111110000000000000000 */
#define READ_SYSTEM_STATUS1_ARGMAX_ID(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS1, SYSTEM_STATUS1_ARGMAX_ID_MASK, SYSTEM_STATUS1_ARGMAX_ID_OFFSET)
#define WRITE_SYSTEM_STATUS1_ARGMAX_ID(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS1, val, SYSTEM_STATUS1_ARGMAX_ID_MASK, SYSTEM_STATUS1_ARGMAX_ID_OFFSET)

/* SYSTEM.STATUS2 (Category: SYSTEM) */
#define READ_SYSTEM_STATUS2(base) npu_reg_read(base, REG_SYSTEM_STATUS2)
#define WRITE_SYSTEM_STATUS2(base, val) npu_reg_write(base, REG_SYSTEM_STATUS2, val)
/* SYSTEM.STATUS2.BUSY (Category: SYSTEM) */
#define SYSTEM_STATUS2_BUSY_LEN        1
#define SYSTEM_STATUS2_BUSY_OFFSET     0
#define SYSTEM_STATUS2_BUSY_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_STATUS2_BUSY_MASK       0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define READ_SYSTEM_STATUS2_BUSY(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS2, SYSTEM_STATUS2_BUSY_MASK, SYSTEM_STATUS2_BUSY_OFFSET)
#define WRITE_SYSTEM_STATUS2_BUSY(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS2, val, SYSTEM_STATUS2_BUSY_MASK, SYSTEM_STATUS2_BUSY_OFFSET)

/* SYSTEM.STATUS2.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_STATUS2_RESERVED0_LEN        31
#define SYSTEM_STATUS2_RESERVED0_OFFSET     1
#define SYSTEM_STATUS2_RESERVED0_MASK_BITS  0x7fffffff /* [30:0] 0b01111111111111111111111111111111 */
#define SYSTEM_STATUS2_RESERVED0_MASK       0xfffffffe /* [31:1] 0b11111111111111111111111111111110 */
#define READ_SYSTEM_STATUS2_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_STATUS2, SYSTEM_STATUS2_RESERVED0_MASK, SYSTEM_STATUS2_RESERVED0_OFFSET)
#define WRITE_SYSTEM_STATUS2_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_STATUS2, val, SYSTEM_STATUS2_RESERVED0_MASK, SYSTEM_STATUS2_RESERVED0_OFFSET)

/* SYSTEM.NET_INFO (Category: SYSTEM) */
#define READ_SYSTEM_NET_INFO(base) npu_reg_read(base, REG_SYSTEM_NET_INFO)
#define WRITE_SYSTEM_NET_INFO(base, val) npu_reg_write(base, REG_SYSTEM_NET_INFO, val)
/* SYSTEM.NET_INFO.LAST_CMD_NUM (Category: SYSTEM) */
#define SYSTEM_NET_INFO_LAST_CMD_NUM_LEN        16
#define SYSTEM_NET_INFO_LAST_CMD_NUM_OFFSET     0
#define SYSTEM_NET_INFO_LAST_CMD_NUM_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_NET_INFO_LAST_CMD_NUM_MASK       0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define READ_SYSTEM_NET_INFO_LAST_CMD_NUM(base) \
    npu_reg_read_mask(base, REG_SYSTEM_NET_INFO, SYSTEM_NET_INFO_LAST_CMD_NUM_MASK, SYSTEM_NET_INFO_LAST_CMD_NUM_OFFSET)
#define WRITE_SYSTEM_NET_INFO_LAST_CMD_NUM(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_NET_INFO, val, SYSTEM_NET_INFO_LAST_CMD_NUM_MASK, SYSTEM_NET_INFO_LAST_CMD_NUM_OFFSET)

/* SYSTEM.NET_INFO.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_NET_INFO_RESERVED0_LEN        16
#define SYSTEM_NET_INFO_RESERVED0_OFFSET     16
#define SYSTEM_NET_INFO_RESERVED0_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_NET_INFO_RESERVED0_MASK       0xffff0000 /* [31:16] 0b11111111111111110000000000000000 */
#define READ_SYSTEM_NET_INFO_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_NET_INFO, SYSTEM_NET_INFO_RESERVED0_MASK, SYSTEM_NET_INFO_RESERVED0_OFFSET)
#define WRITE_SYSTEM_NET_INFO_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_NET_INFO, val, SYSTEM_NET_INFO_RESERVED0_MASK, SYSTEM_NET_INFO_RESERVED0_OFFSET)

/* SYSTEM.IRQ_STATUS (Category: SYSTEM) */
#define READ_SYSTEM_IRQ_STATUS(base) npu_reg_read(base, REG_SYSTEM_IRQ_STATUS)
#define WRITE_SYSTEM_IRQ_STATUS(base, val) npu_reg_write(base, REG_SYSTEM_IRQ_STATUS, val)
/* SYSTEM.IRQ_STATUS.STATUS_TILE (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_STATUS_TILE_LEN        16
#define SYSTEM_IRQ_STATUS_STATUS_TILE_OFFSET     0
#define SYSTEM_IRQ_STATUS_STATUS_TILE_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_IRQ_STATUS_STATUS_TILE_MASK       0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define READ_SYSTEM_IRQ_STATUS_STATUS_TILE(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_STATUS_TILE_MASK, SYSTEM_IRQ_STATUS_STATUS_TILE_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_STATUS_TILE(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_STATUS_TILE_MASK, SYSTEM_IRQ_STATUS_STATUS_TILE_OFFSET)

/* SYSTEM.IRQ_STATUS.STATUS_OP (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_STATUS_OP_LEN        4
#define SYSTEM_IRQ_STATUS_STATUS_OP_OFFSET     16
#define SYSTEM_IRQ_STATUS_STATUS_OP_MASK_BITS  0x0000000f /* [3:0] 0b00000000000000000000000000001111 */
#define SYSTEM_IRQ_STATUS_STATUS_OP_MASK       0x000f0000 /* [19:16] 0b00000000000011110000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_STATUS_OP(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_STATUS_OP_MASK, SYSTEM_IRQ_STATUS_STATUS_OP_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_STATUS_OP(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_STATUS_OP_MASK, SYSTEM_IRQ_STATUS_STATUS_OP_OFFSET)

/* SYSTEM.IRQ_STATUS.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_RESERVED0_LEN        1
#define SYSTEM_IRQ_STATUS_RESERVED0_OFFSET     20
#define SYSTEM_IRQ_STATUS_RESERVED0_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_RESERVED0_MASK       0x00100000 /* [20:20] 0b00000000000100000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_RESERVED0_MASK, SYSTEM_IRQ_STATUS_RESERVED0_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_RESERVED0_MASK, SYSTEM_IRQ_STATUS_RESERVED0_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_MEM_COLLISION (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION_OFFSET     21
#define SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION_MASK       0x00200000 /* [21:21] 0b00000000001000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION_MASK, SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION_MASK, SYSTEM_IRQ_STATUS_IRQ_MEM_COLLISION_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_CMD_REACHED (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED_OFFSET     22
#define SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED_MASK       0x00400000 /* [22:22] 0b00000000010000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED_MASK, SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED_MASK, SYSTEM_IRQ_STATUS_IRQ_CMD_REACHED_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_CMD_CKSUM (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM_OFFSET     23
#define SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM_MASK       0x00800000 /* [23:23] 0b00000000100000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM_MASK, SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM_MASK, SYSTEM_IRQ_STATUS_IRQ_CMD_CKSUM_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_NPU_FIFO (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO_OFFSET     24
#define SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO_MASK       0x01000000 /* [24:24] 0b00000001000000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO_MASK, SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO_MASK, SYSTEM_IRQ_STATUS_IRQ_NPU_FIFO_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_DMA_FIFO_NCLK (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK_OFFSET     25
#define SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK_MASK       0x02000000 /* [25:25] 0b00000010000000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK_MASK, SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK_MASK, SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_NCLK_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_DMA_FIFO_ACLK (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK_OFFSET     26
#define SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK_MASK       0x04000000 /* [26:26] 0b00000100000000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK_MASK, SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK_MASK, SYSTEM_IRQ_STATUS_IRQ_DMA_FIFO_ACLK_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_TIMEOUT_OP (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP_OFFSET     27
#define SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP_MASK       0x08000000 /* [27:27] 0b00001000000000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP_MASK, SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP_MASK, SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_OP_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_TIMEOUT_DMA (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA_OFFSET     28
#define SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA_MASK       0x10000000 /* [28:28] 0b00010000000000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA_MASK, SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA_MASK, SYSTEM_IRQ_STATUS_IRQ_TIMEOUT_DMA_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_INPUT_DONE (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE_OFFSET     29
#define SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE_MASK       0x20000000 /* [29:29] 0b00100000000000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE_MASK, SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE_MASK, SYSTEM_IRQ_STATUS_IRQ_INPUT_DONE_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_TILE (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_TILE_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_TILE_OFFSET     30
#define SYSTEM_IRQ_STATUS_IRQ_TILE_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_TILE_MASK       0x40000000 /* [30:30] 0b01000000000000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_TILE(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_TILE_MASK, SYSTEM_IRQ_STATUS_IRQ_TILE_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_TILE(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_TILE_MASK, SYSTEM_IRQ_STATUS_IRQ_TILE_OFFSET)

/* SYSTEM.IRQ_STATUS.IRQ_FRAME (Category: SYSTEM) */
#define SYSTEM_IRQ_STATUS_IRQ_FRAME_LEN        1
#define SYSTEM_IRQ_STATUS_IRQ_FRAME_OFFSET     31
#define SYSTEM_IRQ_STATUS_IRQ_FRAME_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_STATUS_IRQ_FRAME_MASK       0x80000000 /* [31:31] 0b10000000000000000000000000000000 */
#define READ_SYSTEM_IRQ_STATUS_IRQ_FRAME(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_STATUS, SYSTEM_IRQ_STATUS_IRQ_FRAME_MASK, SYSTEM_IRQ_STATUS_IRQ_FRAME_OFFSET)
#define WRITE_SYSTEM_IRQ_STATUS_IRQ_FRAME(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_STATUS, val, SYSTEM_IRQ_STATUS_IRQ_FRAME_MASK, SYSTEM_IRQ_STATUS_IRQ_FRAME_OFFSET)

/* SYSTEM.IRQ_SET (Category: SYSTEM) */
#define READ_SYSTEM_IRQ_SET(base) npu_reg_read(base, REG_SYSTEM_IRQ_SET)
#define WRITE_SYSTEM_IRQ_SET(base, val) npu_reg_write(base, REG_SYSTEM_IRQ_SET, val)
/* SYSTEM.IRQ_SET.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_RESERVED0_LEN        21
#define SYSTEM_IRQ_SET_RESERVED0_OFFSET     0
#define SYSTEM_IRQ_SET_RESERVED0_MASK_BITS  0x001fffff /* [20:0] 0b00000000000111111111111111111111 */
#define SYSTEM_IRQ_SET_RESERVED0_MASK       0x001fffff /* [20:0] 0b00000000000111111111111111111111 */
#define READ_SYSTEM_IRQ_SET_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_RESERVED0_MASK, SYSTEM_IRQ_SET_RESERVED0_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_RESERVED0_MASK, SYSTEM_IRQ_SET_RESERVED0_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_MEM_COLLISION_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET_LEN        1
#define SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET_OFFSET     21
#define SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET_MASK       0x00200000 /* [21:21] 0b00000000001000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET_MASK, SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET_MASK, SYSTEM_IRQ_SET_IRQ_MEM_COLLISION_SET_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_CMD_REACHED_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET_LEN        1
#define SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET_OFFSET     22
#define SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET_MASK       0x00400000 /* [22:22] 0b00000000010000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET_MASK, SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET_MASK, SYSTEM_IRQ_SET_IRQ_CMD_REACHED_SET_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_CMD_CKSUM_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET_LEN        1
#define SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET_OFFSET     23
#define SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET_MASK       0x00800000 /* [23:23] 0b00000000100000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET_MASK, SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET_MASK, SYSTEM_IRQ_SET_IRQ_CMD_CKSUM_SET_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_NPU_FIFO_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET_LEN        1
#define SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET_OFFSET     24
#define SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET_MASK       0x01000000 /* [24:24] 0b00000001000000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET_MASK, SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET_MASK, SYSTEM_IRQ_SET_IRQ_NPU_FIFO_SET_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_DMA_FIFO_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET_LEN        2
#define SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET_OFFSET     25
#define SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET_MASK_BITS  0x00000003 /* [1:0] 0b00000000000000000000000000000011 */
#define SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET_MASK       0x06000000 /* [26:25] 0b00000110000000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET_MASK, SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET_MASK, SYSTEM_IRQ_SET_IRQ_DMA_FIFO_SET_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_TIMEOUT_OP_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET_LEN        1
#define SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET_OFFSET     27
#define SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET_MASK       0x08000000 /* [27:27] 0b00001000000000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET_MASK, SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET_MASK, SYSTEM_IRQ_SET_IRQ_TIMEOUT_OP_SET_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_TIMEOUT_DMA_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET_LEN        1
#define SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET_OFFSET     28
#define SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET_MASK       0x10000000 /* [28:28] 0b00010000000000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET_MASK, SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET_MASK, SYSTEM_IRQ_SET_IRQ_TIMEOUT_DMA_SET_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_INPUT_DONE_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET_LEN        1
#define SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET_OFFSET     29
#define SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET_MASK       0x20000000 /* [29:29] 0b00100000000000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET_MASK, SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET_MASK, SYSTEM_IRQ_SET_IRQ_INPUT_DONE_SET_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_TILE_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_TILE_SET_LEN        1
#define SYSTEM_IRQ_SET_IRQ_TILE_SET_OFFSET     30
#define SYSTEM_IRQ_SET_IRQ_TILE_SET_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_SET_IRQ_TILE_SET_MASK       0x40000000 /* [30:30] 0b01000000000000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_TILE_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_TILE_SET_MASK, SYSTEM_IRQ_SET_IRQ_TILE_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_TILE_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_TILE_SET_MASK, SYSTEM_IRQ_SET_IRQ_TILE_SET_OFFSET)

/* SYSTEM.IRQ_SET.IRQ_FRAME_SET (Category: SYSTEM) */
#define SYSTEM_IRQ_SET_IRQ_FRAME_SET_LEN        1
#define SYSTEM_IRQ_SET_IRQ_FRAME_SET_OFFSET     31
#define SYSTEM_IRQ_SET_IRQ_FRAME_SET_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_IRQ_SET_IRQ_FRAME_SET_MASK       0x80000000 /* [31:31] 0b10000000000000000000000000000000 */
#define READ_SYSTEM_IRQ_SET_IRQ_FRAME_SET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_SET, SYSTEM_IRQ_SET_IRQ_FRAME_SET_MASK, SYSTEM_IRQ_SET_IRQ_FRAME_SET_OFFSET)
#define WRITE_SYSTEM_IRQ_SET_IRQ_FRAME_SET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_SET, val, SYSTEM_IRQ_SET_IRQ_FRAME_SET_MASK, SYSTEM_IRQ_SET_IRQ_FRAME_SET_OFFSET)

/* SYSTEM.IRQ_CNT0 (Category: SYSTEM) */
#define READ_SYSTEM_IRQ_CNT0(base) npu_reg_read(base, REG_SYSTEM_IRQ_CNT0)
#define WRITE_SYSTEM_IRQ_CNT0(base, val) npu_reg_write(base, REG_SYSTEM_IRQ_CNT0, val)
/* SYSTEM.IRQ_CNT0.IRQ_CNT_NPU_NORMAL (Category: SYSTEM) */
#define SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL_LEN        32
#define SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL_OFFSET     0
#define SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_CNT0, SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL_MASK, SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL_OFFSET)
#define WRITE_SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_CNT0, val, SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL_MASK, SYSTEM_IRQ_CNT0_IRQ_CNT_NPU_NORMAL_OFFSET)

/* SYSTEM.IRQ_CNT1 (Category: SYSTEM) */
#define READ_SYSTEM_IRQ_CNT1(base) npu_reg_read(base, REG_SYSTEM_IRQ_CNT1)
#define WRITE_SYSTEM_IRQ_CNT1(base, val) npu_reg_write(base, REG_SYSTEM_IRQ_CNT1, val)
/* SYSTEM.IRQ_CNT1.IRQ_CNT_NPU_INPUT_DONE (Category: SYSTEM) */
#define SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE_LEN        32
#define SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE_OFFSET     0
#define SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_CNT1, SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE_MASK, SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE_OFFSET)
#define WRITE_SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_CNT1, val, SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE_MASK, SYSTEM_IRQ_CNT1_IRQ_CNT_NPU_INPUT_DONE_OFFSET)

/* SYSTEM.IRQ_CNT2 (Category: SYSTEM) */
#define READ_SYSTEM_IRQ_CNT2(base) npu_reg_read(base, REG_SYSTEM_IRQ_CNT2)
#define WRITE_SYSTEM_IRQ_CNT2(base, val) npu_reg_write(base, REG_SYSTEM_IRQ_CNT2, val)
/* SYSTEM.IRQ_CNT2.IRQ_CNT_NPU_ABNORMAL (Category: SYSTEM) */
#define SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL_LEN        32
#define SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL_OFFSET     0
#define SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_CNT2, SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL_MASK, SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL_OFFSET)
#define WRITE_SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_CNT2, val, SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL_MASK, SYSTEM_IRQ_CNT2_IRQ_CNT_NPU_ABNORMAL_OFFSET)

/* SYSTEM.IN_FEATURE_BASE (Category: SYSTEM) */
#define READ_SYSTEM_IN_FEATURE_BASE(base) npu_reg_read(base, REG_SYSTEM_IN_FEATURE_BASE)
#define WRITE_SYSTEM_IN_FEATURE_BASE(base, val) npu_reg_write(base, REG_SYSTEM_IN_FEATURE_BASE, val)
/* SYSTEM.IN_FEATURE_BASE.IN_FEATURE_OFFSET (Category: SYSTEM) */
#define SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET_LEN        32
#define SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET_OFFSET     0
#define SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IN_FEATURE_BASE, SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET_MASK, SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET_OFFSET)
#define WRITE_SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IN_FEATURE_BASE, val, SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET_MASK, SYSTEM_IN_FEATURE_BASE_IN_FEATURE_OFFSET_OFFSET)

/* SYSTEM.OUT_FEATURE_BASE (Category: SYSTEM) */
#define READ_SYSTEM_OUT_FEATURE_BASE(base) npu_reg_read(base, REG_SYSTEM_OUT_FEATURE_BASE)
#define WRITE_SYSTEM_OUT_FEATURE_BASE(base, val) npu_reg_write(base, REG_SYSTEM_OUT_FEATURE_BASE, val)
/* SYSTEM.OUT_FEATURE_BASE.OUT_FEATURE_OFFSET (Category: SYSTEM) */
#define SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET_LEN        32
#define SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET_OFFSET     0
#define SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_OUT_FEATURE_BASE, SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET_MASK, SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET_OFFSET)
#define WRITE_SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_OUT_FEATURE_BASE, val, SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET_MASK, SYSTEM_OUT_FEATURE_BASE_OUT_FEATURE_OFFSET_OFFSET)

/* SYSTEM.WEIGHT_BASE (Category: SYSTEM) */
#define READ_SYSTEM_WEIGHT_BASE(base) npu_reg_read(base, REG_SYSTEM_WEIGHT_BASE)
#define WRITE_SYSTEM_WEIGHT_BASE(base, val) npu_reg_write(base, REG_SYSTEM_WEIGHT_BASE, val)
/* SYSTEM.WEIGHT_BASE.WEIGHT_OFFSET (Category: SYSTEM) */
#define SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_LEN        32
#define SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_OFFSET     0
#define SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_WEIGHT_BASE, SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_MASK, SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_OFFSET)
#define WRITE_SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_WEIGHT_BASE, val, SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_MASK, SYSTEM_WEIGHT_BASE_WEIGHT_OFFSET_OFFSET)

/* SYSTEM.IRQ_TIMER_DMA (Category: SYSTEM) */
#define READ_SYSTEM_IRQ_TIMER_DMA(base) npu_reg_read(base, REG_SYSTEM_IRQ_TIMER_DMA)
#define WRITE_SYSTEM_IRQ_TIMER_DMA(base, val) npu_reg_write(base, REG_SYSTEM_IRQ_TIMER_DMA, val)
/* SYSTEM.IRQ_TIMER_DMA.IRQ_TIMER_DMA (Category: SYSTEM) */
#define SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA_LEN        32
#define SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA_OFFSET     0
#define SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_TIMER_DMA, SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA_MASK, SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA_OFFSET)
#define WRITE_SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_TIMER_DMA, val, SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA_MASK, SYSTEM_IRQ_TIMER_DMA_IRQ_TIMER_DMA_OFFSET)

/* SYSTEM.IRQ_TIMER_OP (Category: SYSTEM) */
#define READ_SYSTEM_IRQ_TIMER_OP(base) npu_reg_read(base, REG_SYSTEM_IRQ_TIMER_OP)
#define WRITE_SYSTEM_IRQ_TIMER_OP(base, val) npu_reg_write(base, REG_SYSTEM_IRQ_TIMER_OP, val)
/* SYSTEM.IRQ_TIMER_OP.IRQ_TIMER_OP (Category: SYSTEM) */
#define SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP_LEN        32
#define SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP_OFFSET     0
#define SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP(base) \
    npu_reg_read_mask(base, REG_SYSTEM_IRQ_TIMER_OP, SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP_MASK, SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP_OFFSET)
#define WRITE_SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_IRQ_TIMER_OP, val, SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP_MASK, SYSTEM_IRQ_TIMER_OP_IRQ_TIMER_OP_OFFSET)

/* SYSTEM.CMD (Category: SYSTEM) */
#define READ_SYSTEM_CMD(base) npu_reg_read(base, REG_SYSTEM_CMD)
#define WRITE_SYSTEM_CMD(base, val) npu_reg_write(base, REG_SYSTEM_CMD, val)
/* SYSTEM.CMD.START (Category: SYSTEM) */
#define SYSTEM_CMD_START_LEN        1
#define SYSTEM_CMD_START_OFFSET     0
#define SYSTEM_CMD_START_MASK_BITS  0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define SYSTEM_CMD_START_MASK       0x00000001 /* [0:0] 0b00000000000000000000000000000001 */
#define READ_SYSTEM_CMD_START(base) \
    npu_reg_read_mask(base, REG_SYSTEM_CMD, SYSTEM_CMD_START_MASK, SYSTEM_CMD_START_OFFSET)
#define WRITE_SYSTEM_CMD_START(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_CMD, val, SYSTEM_CMD_START_MASK, SYSTEM_CMD_START_OFFSET)

/* SYSTEM.CMD.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_CMD_RESERVED0_LEN        31
#define SYSTEM_CMD_RESERVED0_OFFSET     1
#define SYSTEM_CMD_RESERVED0_MASK_BITS  0x7fffffff /* [30:0] 0b01111111111111111111111111111111 */
#define SYSTEM_CMD_RESERVED0_MASK       0xfffffffe /* [31:1] 0b11111111111111111111111111111110 */
#define READ_SYSTEM_CMD_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_CMD, SYSTEM_CMD_RESERVED0_MASK, SYSTEM_CMD_RESERVED0_OFFSET)
#define WRITE_SYSTEM_CMD_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_CMD, val, SYSTEM_CMD_RESERVED0_MASK, SYSTEM_CMD_RESERVED0_OFFSET)

/* SYSTEM.SWREG0 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG0(base) npu_reg_read(base, REG_SYSTEM_SWREG0)
#define WRITE_SYSTEM_SWREG0(base, val) npu_reg_write(base, REG_SYSTEM_SWREG0, val)
/* SYSTEM.SWREG0.SWREG0 (Category: SYSTEM) */
#define SYSTEM_SWREG0_SWREG0_LEN        32
#define SYSTEM_SWREG0_SWREG0_OFFSET     0
#define SYSTEM_SWREG0_SWREG0_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG0_SWREG0_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG0_SWREG0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG0, SYSTEM_SWREG0_SWREG0_MASK, SYSTEM_SWREG0_SWREG0_OFFSET)
#define WRITE_SYSTEM_SWREG0_SWREG0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG0, val, SYSTEM_SWREG0_SWREG0_MASK, SYSTEM_SWREG0_SWREG0_OFFSET)

/* SYSTEM.SWREG1 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG1(base) npu_reg_read(base, REG_SYSTEM_SWREG1)
#define WRITE_SYSTEM_SWREG1(base, val) npu_reg_write(base, REG_SYSTEM_SWREG1, val)
/* SYSTEM.SWREG1.SWREG1 (Category: SYSTEM) */
#define SYSTEM_SWREG1_SWREG1_LEN        32
#define SYSTEM_SWREG1_SWREG1_OFFSET     0
#define SYSTEM_SWREG1_SWREG1_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG1_SWREG1_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG1_SWREG1(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG1, SYSTEM_SWREG1_SWREG1_MASK, SYSTEM_SWREG1_SWREG1_OFFSET)
#define WRITE_SYSTEM_SWREG1_SWREG1(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG1, val, SYSTEM_SWREG1_SWREG1_MASK, SYSTEM_SWREG1_SWREG1_OFFSET)

/* SYSTEM.SWREG2 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG2(base) npu_reg_read(base, REG_SYSTEM_SWREG2)
#define WRITE_SYSTEM_SWREG2(base, val) npu_reg_write(base, REG_SYSTEM_SWREG2, val)
/* SYSTEM.SWREG2.SWREG2 (Category: SYSTEM) */
#define SYSTEM_SWREG2_SWREG2_LEN        32
#define SYSTEM_SWREG2_SWREG2_OFFSET     0
#define SYSTEM_SWREG2_SWREG2_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG2_SWREG2_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG2_SWREG2(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG2, SYSTEM_SWREG2_SWREG2_MASK, SYSTEM_SWREG2_SWREG2_OFFSET)
#define WRITE_SYSTEM_SWREG2_SWREG2(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG2, val, SYSTEM_SWREG2_SWREG2_MASK, SYSTEM_SWREG2_SWREG2_OFFSET)

/* SYSTEM.SWREG3 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG3(base) npu_reg_read(base, REG_SYSTEM_SWREG3)
#define WRITE_SYSTEM_SWREG3(base, val) npu_reg_write(base, REG_SYSTEM_SWREG3, val)
/* SYSTEM.SWREG3.SWREG3 (Category: SYSTEM) */
#define SYSTEM_SWREG3_SWREG3_LEN        32
#define SYSTEM_SWREG3_SWREG3_OFFSET     0
#define SYSTEM_SWREG3_SWREG3_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG3_SWREG3_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG3_SWREG3(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG3, SYSTEM_SWREG3_SWREG3_MASK, SYSTEM_SWREG3_SWREG3_OFFSET)
#define WRITE_SYSTEM_SWREG3_SWREG3(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG3, val, SYSTEM_SWREG3_SWREG3_MASK, SYSTEM_SWREG3_SWREG3_OFFSET)

/* SYSTEM.SWREG4 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG4(base) npu_reg_read(base, REG_SYSTEM_SWREG4)
#define WRITE_SYSTEM_SWREG4(base, val) npu_reg_write(base, REG_SYSTEM_SWREG4, val)
/* SYSTEM.SWREG4.SWREG4 (Category: SYSTEM) */
#define SYSTEM_SWREG4_SWREG4_LEN        32
#define SYSTEM_SWREG4_SWREG4_OFFSET     0
#define SYSTEM_SWREG4_SWREG4_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG4_SWREG4_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG4_SWREG4(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG4, SYSTEM_SWREG4_SWREG4_MASK, SYSTEM_SWREG4_SWREG4_OFFSET)
#define WRITE_SYSTEM_SWREG4_SWREG4(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG4, val, SYSTEM_SWREG4_SWREG4_MASK, SYSTEM_SWREG4_SWREG4_OFFSET)

/* SYSTEM.SWREG5 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG5(base) npu_reg_read(base, REG_SYSTEM_SWREG5)
#define WRITE_SYSTEM_SWREG5(base, val) npu_reg_write(base, REG_SYSTEM_SWREG5, val)
/* SYSTEM.SWREG5.SWREG5 (Category: SYSTEM) */
#define SYSTEM_SWREG5_SWREG5_LEN        32
#define SYSTEM_SWREG5_SWREG5_OFFSET     0
#define SYSTEM_SWREG5_SWREG5_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG5_SWREG5_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG5_SWREG5(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG5, SYSTEM_SWREG5_SWREG5_MASK, SYSTEM_SWREG5_SWREG5_OFFSET)
#define WRITE_SYSTEM_SWREG5_SWREG5(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG5, val, SYSTEM_SWREG5_SWREG5_MASK, SYSTEM_SWREG5_SWREG5_OFFSET)

/* SYSTEM.SWREG6 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG6(base) npu_reg_read(base, REG_SYSTEM_SWREG6)
#define WRITE_SYSTEM_SWREG6(base, val) npu_reg_write(base, REG_SYSTEM_SWREG6, val)
/* SYSTEM.SWREG6.SWREG6 (Category: SYSTEM) */
#define SYSTEM_SWREG6_SWREG6_LEN        32
#define SYSTEM_SWREG6_SWREG6_OFFSET     0
#define SYSTEM_SWREG6_SWREG6_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG6_SWREG6_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG6_SWREG6(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG6, SYSTEM_SWREG6_SWREG6_MASK, SYSTEM_SWREG6_SWREG6_OFFSET)
#define WRITE_SYSTEM_SWREG6_SWREG6(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG6, val, SYSTEM_SWREG6_SWREG6_MASK, SYSTEM_SWREG6_SWREG6_OFFSET)

/* SYSTEM.SWREG7 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG7(base) npu_reg_read(base, REG_SYSTEM_SWREG7)
#define WRITE_SYSTEM_SWREG7(base, val) npu_reg_write(base, REG_SYSTEM_SWREG7, val)
/* SYSTEM.SWREG7.SWREG7 (Category: SYSTEM) */
#define SYSTEM_SWREG7_SWREG7_LEN        32
#define SYSTEM_SWREG7_SWREG7_OFFSET     0
#define SYSTEM_SWREG7_SWREG7_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG7_SWREG7_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG7_SWREG7(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG7, SYSTEM_SWREG7_SWREG7_MASK, SYSTEM_SWREG7_SWREG7_OFFSET)
#define WRITE_SYSTEM_SWREG7_SWREG7(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG7, val, SYSTEM_SWREG7_SWREG7_MASK, SYSTEM_SWREG7_SWREG7_OFFSET)

/* SYSTEM.SWREG8 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG8(base) npu_reg_read(base, REG_SYSTEM_SWREG8)
#define WRITE_SYSTEM_SWREG8(base, val) npu_reg_write(base, REG_SYSTEM_SWREG8, val)
/* SYSTEM.SWREG8.SWREG8 (Category: SYSTEM) */
#define SYSTEM_SWREG8_SWREG8_LEN        32
#define SYSTEM_SWREG8_SWREG8_OFFSET     0
#define SYSTEM_SWREG8_SWREG8_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG8_SWREG8_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG8_SWREG8(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG8, SYSTEM_SWREG8_SWREG8_MASK, SYSTEM_SWREG8_SWREG8_OFFSET)
#define WRITE_SYSTEM_SWREG8_SWREG8(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG8, val, SYSTEM_SWREG8_SWREG8_MASK, SYSTEM_SWREG8_SWREG8_OFFSET)

/* SYSTEM.SWREG9 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG9(base) npu_reg_read(base, REG_SYSTEM_SWREG9)
#define WRITE_SYSTEM_SWREG9(base, val) npu_reg_write(base, REG_SYSTEM_SWREG9, val)
/* SYSTEM.SWREG9.SWREG9 (Category: SYSTEM) */
#define SYSTEM_SWREG9_SWREG9_LEN        32
#define SYSTEM_SWREG9_SWREG9_OFFSET     0
#define SYSTEM_SWREG9_SWREG9_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG9_SWREG9_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG9_SWREG9(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG9, SYSTEM_SWREG9_SWREG9_MASK, SYSTEM_SWREG9_SWREG9_OFFSET)
#define WRITE_SYSTEM_SWREG9_SWREG9(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG9, val, SYSTEM_SWREG9_SWREG9_MASK, SYSTEM_SWREG9_SWREG9_OFFSET)

/* SYSTEM.SWREG10 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG10(base) npu_reg_read(base, REG_SYSTEM_SWREG10)
#define WRITE_SYSTEM_SWREG10(base, val) npu_reg_write(base, REG_SYSTEM_SWREG10, val)
/* SYSTEM.SWREG10.SWREG10 (Category: SYSTEM) */
#define SYSTEM_SWREG10_SWREG10_LEN        32
#define SYSTEM_SWREG10_SWREG10_OFFSET     0
#define SYSTEM_SWREG10_SWREG10_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG10_SWREG10_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG10_SWREG10(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG10, SYSTEM_SWREG10_SWREG10_MASK, SYSTEM_SWREG10_SWREG10_OFFSET)
#define WRITE_SYSTEM_SWREG10_SWREG10(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG10, val, SYSTEM_SWREG10_SWREG10_MASK, SYSTEM_SWREG10_SWREG10_OFFSET)

/* SYSTEM.SWREG11 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG11(base) npu_reg_read(base, REG_SYSTEM_SWREG11)
#define WRITE_SYSTEM_SWREG11(base, val) npu_reg_write(base, REG_SYSTEM_SWREG11, val)
/* SYSTEM.SWREG11.SWREG11 (Category: SYSTEM) */
#define SYSTEM_SWREG11_SWREG11_LEN        32
#define SYSTEM_SWREG11_SWREG11_OFFSET     0
#define SYSTEM_SWREG11_SWREG11_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG11_SWREG11_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG11_SWREG11(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG11, SYSTEM_SWREG11_SWREG11_MASK, SYSTEM_SWREG11_SWREG11_OFFSET)
#define WRITE_SYSTEM_SWREG11_SWREG11(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG11, val, SYSTEM_SWREG11_SWREG11_MASK, SYSTEM_SWREG11_SWREG11_OFFSET)

/* SYSTEM.SWREG12 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG12(base) npu_reg_read(base, REG_SYSTEM_SWREG12)
#define WRITE_SYSTEM_SWREG12(base, val) npu_reg_write(base, REG_SYSTEM_SWREG12, val)
/* SYSTEM.SWREG12.SWREG12 (Category: SYSTEM) */
#define SYSTEM_SWREG12_SWREG12_LEN        32
#define SYSTEM_SWREG12_SWREG12_OFFSET     0
#define SYSTEM_SWREG12_SWREG12_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG12_SWREG12_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG12_SWREG12(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG12, SYSTEM_SWREG12_SWREG12_MASK, SYSTEM_SWREG12_SWREG12_OFFSET)
#define WRITE_SYSTEM_SWREG12_SWREG12(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG12, val, SYSTEM_SWREG12_SWREG12_MASK, SYSTEM_SWREG12_SWREG12_OFFSET)

/* SYSTEM.SWREG13 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG13(base) npu_reg_read(base, REG_SYSTEM_SWREG13)
#define WRITE_SYSTEM_SWREG13(base, val) npu_reg_write(base, REG_SYSTEM_SWREG13, val)
/* SYSTEM.SWREG13.SWREG13 (Category: SYSTEM) */
#define SYSTEM_SWREG13_SWREG13_LEN        32
#define SYSTEM_SWREG13_SWREG13_OFFSET     0
#define SYSTEM_SWREG13_SWREG13_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG13_SWREG13_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG13_SWREG13(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG13, SYSTEM_SWREG13_SWREG13_MASK, SYSTEM_SWREG13_SWREG13_OFFSET)
#define WRITE_SYSTEM_SWREG13_SWREG13(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG13, val, SYSTEM_SWREG13_SWREG13_MASK, SYSTEM_SWREG13_SWREG13_OFFSET)

/* SYSTEM.SWREG14 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG14(base) npu_reg_read(base, REG_SYSTEM_SWREG14)
#define WRITE_SYSTEM_SWREG14(base, val) npu_reg_write(base, REG_SYSTEM_SWREG14, val)
/* SYSTEM.SWREG14.SWREG14 (Category: SYSTEM) */
#define SYSTEM_SWREG14_SWREG14_LEN        32
#define SYSTEM_SWREG14_SWREG14_OFFSET     0
#define SYSTEM_SWREG14_SWREG14_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG14_SWREG14_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG14_SWREG14(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG14, SYSTEM_SWREG14_SWREG14_MASK, SYSTEM_SWREG14_SWREG14_OFFSET)
#define WRITE_SYSTEM_SWREG14_SWREG14(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG14, val, SYSTEM_SWREG14_SWREG14_MASK, SYSTEM_SWREG14_SWREG14_OFFSET)

/* SYSTEM.SWREG15 (Category: SYSTEM) */
#define READ_SYSTEM_SWREG15(base) npu_reg_read(base, REG_SYSTEM_SWREG15)
#define WRITE_SYSTEM_SWREG15(base, val) npu_reg_write(base, REG_SYSTEM_SWREG15, val)
/* SYSTEM.SWREG15.SWREG15 (Category: SYSTEM) */
#define SYSTEM_SWREG15_SWREG15_LEN        32
#define SYSTEM_SWREG15_SWREG15_OFFSET     0
#define SYSTEM_SWREG15_SWREG15_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_SWREG15_SWREG15_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_SWREG15_SWREG15(base) \
    npu_reg_read_mask(base, REG_SYSTEM_SWREG15, SYSTEM_SWREG15_SWREG15_MASK, SYSTEM_SWREG15_SWREG15_OFFSET)
#define WRITE_SYSTEM_SWREG15_SWREG15(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_SWREG15, val, SYSTEM_SWREG15_SWREG15_MASK, SYSTEM_SWREG15_SWREG15_OFFSET)

/* SYSTEM.PPU_OUT_FILTER_INFO (Category: SYSTEM) */
#define READ_SYSTEM_PPU_OUT_FILTER_INFO(base) npu_reg_read(base, REG_SYSTEM_PPU_OUT_FILTER_INFO)
#define WRITE_SYSTEM_PPU_OUT_FILTER_INFO(base, val) npu_reg_write(base, REG_SYSTEM_PPU_OUT_FILTER_INFO, val)
/* SYSTEM.PPU_OUT_FILTER_INFO.PPU_FILTERING_NUM (Category: SYSTEM) */
#define SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM_LEN        16
#define SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM_OFFSET     0
#define SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM_MASK       0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define READ_SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM(base) \
    npu_reg_read_mask(base, REG_SYSTEM_PPU_OUT_FILTER_INFO, SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM_MASK, SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM_OFFSET)
#define WRITE_SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_PPU_OUT_FILTER_INFO, val, SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM_MASK, SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_NUM_OFFSET)

/* SYSTEM.PPU_OUT_FILTER_INFO.PPU_FILTERING_WNUM (Category: SYSTEM) */
#define SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM_LEN        16
#define SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM_OFFSET     16
#define SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM_MASK_BITS  0x0000ffff /* [15:0] 0b00000000000000001111111111111111 */
#define SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM_MASK       0xffff0000 /* [31:16] 0b11111111111111110000000000000000 */
#define READ_SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM(base) \
    npu_reg_read_mask(base, REG_SYSTEM_PPU_OUT_FILTER_INFO, SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM_MASK, SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM_OFFSET)
#define WRITE_SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_PPU_OUT_FILTER_INFO, val, SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM_MASK, SYSTEM_PPU_OUT_FILTER_INFO_PPU_FILTERING_WNUM_OFFSET)

/* SYSTEM.PPU_OUT_FEATURE_BASE (Category: SYSTEM) */
#define READ_SYSTEM_PPU_OUT_FEATURE_BASE(base) npu_reg_read(base, REG_SYSTEM_PPU_OUT_FEATURE_BASE)
#define WRITE_SYSTEM_PPU_OUT_FEATURE_BASE(base, val) npu_reg_write(base, REG_SYSTEM_PPU_OUT_FEATURE_BASE, val)
/* SYSTEM.PPU_OUT_FEATURE_BASE.PPU_OUT_FEATURE_OFFSET (Category: SYSTEM) */
#define SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET_LEN        32
#define SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET_OFFSET     0
#define SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET(base) \
    npu_reg_read_mask(base, REG_SYSTEM_PPU_OUT_FEATURE_BASE, SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET_MASK, SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET_OFFSET)
#define WRITE_SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_PPU_OUT_FEATURE_BASE, val, SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET_MASK, SYSTEM_PPU_OUT_FEATURE_BASE_PPU_OUT_FEATURE_OFFSET_OFFSET)

/* SYSTEM.RSV0 (Category: SYSTEM) */
#define READ_SYSTEM_RSV0(base) npu_reg_read(base, REG_SYSTEM_RSV0)
#define WRITE_SYSTEM_RSV0(base, val) npu_reg_write(base, REG_SYSTEM_RSV0, val)
/* SYSTEM.RSV0.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_RSV0_RESERVED0_LEN        32
#define SYSTEM_RSV0_RESERVED0_OFFSET     0
#define SYSTEM_RSV0_RESERVED0_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_RSV0_RESERVED0_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_RSV0_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_RSV0, SYSTEM_RSV0_RESERVED0_MASK, SYSTEM_RSV0_RESERVED0_OFFSET)
#define WRITE_SYSTEM_RSV0_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_RSV0, val, SYSTEM_RSV0_RESERVED0_MASK, SYSTEM_RSV0_RESERVED0_OFFSET)

/* SYSTEM.RSV1 (Category: SYSTEM) */
#define READ_SYSTEM_RSV1(base) npu_reg_read(base, REG_SYSTEM_RSV1)
#define WRITE_SYSTEM_RSV1(base, val) npu_reg_write(base, REG_SYSTEM_RSV1, val)
/* SYSTEM.RSV1.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_RSV1_RESERVED0_LEN        32
#define SYSTEM_RSV1_RESERVED0_OFFSET     0
#define SYSTEM_RSV1_RESERVED0_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_RSV1_RESERVED0_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_RSV1_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_RSV1, SYSTEM_RSV1_RESERVED0_MASK, SYSTEM_RSV1_RESERVED0_OFFSET)
#define WRITE_SYSTEM_RSV1_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_RSV1, val, SYSTEM_RSV1_RESERVED0_MASK, SYSTEM_RSV1_RESERVED0_OFFSET)

/* SYSTEM.RSV2 (Category: SYSTEM) */
#define READ_SYSTEM_RSV2(base) npu_reg_read(base, REG_SYSTEM_RSV2)
#define WRITE_SYSTEM_RSV2(base, val) npu_reg_write(base, REG_SYSTEM_RSV2, val)
/* SYSTEM.RSV2.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_RSV2_RESERVED0_LEN        32
#define SYSTEM_RSV2_RESERVED0_OFFSET     0
#define SYSTEM_RSV2_RESERVED0_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_RSV2_RESERVED0_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_RSV2_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_RSV2, SYSTEM_RSV2_RESERVED0_MASK, SYSTEM_RSV2_RESERVED0_OFFSET)
#define WRITE_SYSTEM_RSV2_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_RSV2, val, SYSTEM_RSV2_RESERVED0_MASK, SYSTEM_RSV2_RESERVED0_OFFSET)

/* SYSTEM.RSV3 (Category: SYSTEM) */
#define READ_SYSTEM_RSV3(base) npu_reg_read(base, REG_SYSTEM_RSV3)
#define WRITE_SYSTEM_RSV3(base, val) npu_reg_write(base, REG_SYSTEM_RSV3, val)
/* SYSTEM.RSV3.RESERVED0 (Category: SYSTEM) */
#define SYSTEM_RSV3_RESERVED0_LEN        32
#define SYSTEM_RSV3_RESERVED0_OFFSET     0
#define SYSTEM_RSV3_RESERVED0_MASK_BITS  0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define SYSTEM_RSV3_RESERVED0_MASK       0xffffffff /* [31:0] 0b11111111111111111111111111111111 */
#define READ_SYSTEM_RSV3_RESERVED0(base) \
    npu_reg_read_mask(base, REG_SYSTEM_RSV3, SYSTEM_RSV3_RESERVED0_MASK, SYSTEM_RSV3_RESERVED0_OFFSET)
#define WRITE_SYSTEM_RSV3_RESERVED0(base, val) \
    npu_reg_write_mask(base, REG_SYSTEM_RSV3, val, SYSTEM_RSV3_RESERVED0_MASK, SYSTEM_RSV3_RESERVED0_OFFSET)


#endif // __NPU_REG_SYSTEM_DX_L3_H
